# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from weewar.v1 import worlds_pb2 as weewar_dot_v1_dot_worlds__pb2


class WorldsServiceStub(object):
    """WorldsService manages the world examples catalog
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateWorld = channel.unary_unary(
                '/weewar.v1.WorldsService/CreateWorld',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.CreateWorldRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.CreateWorldResponse.FromString,
                _registered_method=True)
        self.GetWorlds = channel.unary_unary(
                '/weewar.v1.WorldsService/GetWorlds',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.GetWorldsRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.GetWorldsResponse.FromString,
                _registered_method=True)
        self.ListWorlds = channel.unary_unary(
                '/weewar.v1.WorldsService/ListWorlds',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.ListWorldsRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.ListWorldsResponse.FromString,
                _registered_method=True)
        self.GetWorld = channel.unary_unary(
                '/weewar.v1.WorldsService/GetWorld',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.GetWorldRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.GetWorldResponse.FromString,
                _registered_method=True)
        self.DeleteWorld = channel.unary_unary(
                '/weewar.v1.WorldsService/DeleteWorld',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.DeleteWorldRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.DeleteWorldResponse.FromString,
                _registered_method=True)
        self.UpdateWorld = channel.unary_unary(
                '/weewar.v1.WorldsService/UpdateWorld',
                request_serializer=weewar_dot_v1_dot_worlds__pb2.UpdateWorldRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_worlds__pb2.UpdateWorldResponse.FromString,
                _registered_method=True)


class WorldsServiceServicer(object):
    """WorldsService manages the world examples catalog
    """

    def CreateWorld(self, request, context):
        """*
        Create a new world
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorlds(self, request, context):
        """*
        Batch get multiple worlds by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorlds(self, request, context):
        """ListWorlds returns all available worlds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorld(self, request, context):
        """GetWorld returns a specific world with metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWorld(self, request, context):
        """*
        Delete a particular world
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorld(self, request, context):
        """GetWorld returns a specific world with metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorldsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorld,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.CreateWorldRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.CreateWorldResponse.SerializeToString,
            ),
            'GetWorlds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorlds,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.GetWorldsRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.GetWorldsResponse.SerializeToString,
            ),
            'ListWorlds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorlds,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.ListWorldsRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.ListWorldsResponse.SerializeToString,
            ),
            'GetWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorld,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.GetWorldRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.GetWorldResponse.SerializeToString,
            ),
            'DeleteWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWorld,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.DeleteWorldRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.DeleteWorldResponse.SerializeToString,
            ),
            'UpdateWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorld,
                    request_deserializer=weewar_dot_v1_dot_worlds__pb2.UpdateWorldRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_worlds__pb2.UpdateWorldResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'weewar.v1.WorldsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('weewar.v1.WorldsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorldsService(object):
    """WorldsService manages the world examples catalog
    """

    @staticmethod
    def CreateWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/CreateWorld',
            weewar_dot_v1_dot_worlds__pb2.CreateWorldRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.CreateWorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorlds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/GetWorlds',
            weewar_dot_v1_dot_worlds__pb2.GetWorldsRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.GetWorldsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListWorlds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/ListWorlds',
            weewar_dot_v1_dot_worlds__pb2.ListWorldsRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.ListWorldsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/GetWorld',
            weewar_dot_v1_dot_worlds__pb2.GetWorldRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.GetWorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/DeleteWorld',
            weewar_dot_v1_dot_worlds__pb2.DeleteWorldRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.DeleteWorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.WorldsService/UpdateWorld',
            weewar_dot_v1_dot_worlds__pb2.UpdateWorldRequest.SerializeToString,
            weewar_dot_v1_dot_worlds__pb2.UpdateWorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
