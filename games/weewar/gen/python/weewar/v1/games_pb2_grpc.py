# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from weewar.v1 import games_pb2 as weewar_dot_v1_dot_games__pb2


class GamesServiceStub(object):
    """GamesService manages the game examples catalog
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateGame = channel.unary_unary(
                '/weewar.v1.GamesService/CreateGame',
                request_serializer=weewar_dot_v1_dot_games__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.CreateGameResponse.FromString,
                _registered_method=True)
        self.GetGames = channel.unary_unary(
                '/weewar.v1.GamesService/GetGames',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetGamesRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetGamesResponse.FromString,
                _registered_method=True)
        self.ListGames = channel.unary_unary(
                '/weewar.v1.GamesService/ListGames',
                request_serializer=weewar_dot_v1_dot_games__pb2.ListGamesRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.ListGamesResponse.FromString,
                _registered_method=True)
        self.GetGame = channel.unary_unary(
                '/weewar.v1.GamesService/GetGame',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetGameRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetGameResponse.FromString,
                _registered_method=True)
        self.DeleteGame = channel.unary_unary(
                '/weewar.v1.GamesService/DeleteGame',
                request_serializer=weewar_dot_v1_dot_games__pb2.DeleteGameRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.DeleteGameResponse.FromString,
                _registered_method=True)
        self.UpdateGame = channel.unary_unary(
                '/weewar.v1.GamesService/UpdateGame',
                request_serializer=weewar_dot_v1_dot_games__pb2.UpdateGameRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.UpdateGameResponse.FromString,
                _registered_method=True)
        self.ProcessMoves = channel.unary_unary(
                '/weewar.v1.GamesService/ProcessMoves',
                request_serializer=weewar_dot_v1_dot_games__pb2.ProcessMovesRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.ProcessMovesResponse.FromString,
                _registered_method=True)
        self.GetMovementOptions = channel.unary_unary(
                '/weewar.v1.GamesService/GetMovementOptions',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetMovementOptionsRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetMovementOptionsResponse.FromString,
                _registered_method=True)
        self.GetAttackOptions = channel.unary_unary(
                '/weewar.v1.GamesService/GetAttackOptions',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetAttackOptionsRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetAttackOptionsResponse.FromString,
                _registered_method=True)
        self.GetTileInfo = channel.unary_unary(
                '/weewar.v1.GamesService/GetTileInfo',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetTileInfoRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetTileInfoResponse.FromString,
                _registered_method=True)
        self.GetTerrainStats = channel.unary_unary(
                '/weewar.v1.GamesService/GetTerrainStats',
                request_serializer=weewar_dot_v1_dot_games__pb2.GetTerrainStatsRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.GetTerrainStatsResponse.FromString,
                _registered_method=True)
        self.CanSelectUnit = channel.unary_unary(
                '/weewar.v1.GamesService/CanSelectUnit',
                request_serializer=weewar_dot_v1_dot_games__pb2.CanSelectUnitRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.CanSelectUnitResponse.FromString,
                _registered_method=True)
        self.CreateGameFromMap = channel.unary_unary(
                '/weewar.v1.GamesService/CreateGameFromMap',
                request_serializer=weewar_dot_v1_dot_games__pb2.CreateGameFromMapRequest.SerializeToString,
                response_deserializer=weewar_dot_v1_dot_games__pb2.CreateGameFromMapResponse.FromString,
                _registered_method=True)


class GamesServiceServicer(object):
    """GamesService manages the game examples catalog
    """

    def CreateGame(self, request, context):
        """*
        Create a new game
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGames(self, request, context):
        """*
        Batch get multiple games by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGames(self, request, context):
        """ListGames returns all available games
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGame(self, request, context):
        """GetGame returns a specific game with metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGame(self, request, context):
        """*
        Delete a particular game
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGame(self, request, context):
        """GetGame returns a specific game with metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessMoves(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMovementOptions(self, request, context):
        """Game interaction methods for UI components
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttackOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTerrainStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CanSelectUnit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGameFromMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GamesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGame,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.CreateGameRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.CreateGameResponse.SerializeToString,
            ),
            'GetGames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGames,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetGamesRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetGamesResponse.SerializeToString,
            ),
            'ListGames': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGames,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.ListGamesRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.ListGamesResponse.SerializeToString,
            ),
            'GetGame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGame,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetGameRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetGameResponse.SerializeToString,
            ),
            'DeleteGame': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGame,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.DeleteGameRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.DeleteGameResponse.SerializeToString,
            ),
            'UpdateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGame,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.UpdateGameRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.UpdateGameResponse.SerializeToString,
            ),
            'ProcessMoves': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessMoves,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.ProcessMovesRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.ProcessMovesResponse.SerializeToString,
            ),
            'GetMovementOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMovementOptions,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetMovementOptionsRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetMovementOptionsResponse.SerializeToString,
            ),
            'GetAttackOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttackOptions,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetAttackOptionsRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetAttackOptionsResponse.SerializeToString,
            ),
            'GetTileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTileInfo,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetTileInfoRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetTileInfoResponse.SerializeToString,
            ),
            'GetTerrainStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTerrainStats,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.GetTerrainStatsRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.GetTerrainStatsResponse.SerializeToString,
            ),
            'CanSelectUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.CanSelectUnit,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.CanSelectUnitRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.CanSelectUnitResponse.SerializeToString,
            ),
            'CreateGameFromMap': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGameFromMap,
                    request_deserializer=weewar_dot_v1_dot_games__pb2.CreateGameFromMapRequest.FromString,
                    response_serializer=weewar_dot_v1_dot_games__pb2.CreateGameFromMapResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'weewar.v1.GamesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('weewar.v1.GamesService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GamesService(object):
    """GamesService manages the game examples catalog
    """

    @staticmethod
    def CreateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/CreateGame',
            weewar_dot_v1_dot_games__pb2.CreateGameRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.CreateGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetGames',
            weewar_dot_v1_dot_games__pb2.GetGamesRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetGamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListGames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/ListGames',
            weewar_dot_v1_dot_games__pb2.ListGamesRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.ListGamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetGame',
            weewar_dot_v1_dot_games__pb2.GetGameRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/DeleteGame',
            weewar_dot_v1_dot_games__pb2.DeleteGameRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.DeleteGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/UpdateGame',
            weewar_dot_v1_dot_games__pb2.UpdateGameRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.UpdateGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessMoves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/ProcessMoves',
            weewar_dot_v1_dot_games__pb2.ProcessMovesRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.ProcessMovesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMovementOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetMovementOptions',
            weewar_dot_v1_dot_games__pb2.GetMovementOptionsRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetMovementOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAttackOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetAttackOptions',
            weewar_dot_v1_dot_games__pb2.GetAttackOptionsRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetAttackOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetTileInfo',
            weewar_dot_v1_dot_games__pb2.GetTileInfoRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetTileInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTerrainStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/GetTerrainStats',
            weewar_dot_v1_dot_games__pb2.GetTerrainStatsRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.GetTerrainStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CanSelectUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/CanSelectUnit',
            weewar_dot_v1_dot_games__pb2.CanSelectUnitRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.CanSelectUnitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateGameFromMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/weewar.v1.GamesService/CreateGameFromMap',
            weewar_dot_v1_dot_games__pb2.CreateGameFromMapRequest.SerializeToString,
            weewar_dot_v1_dot_games__pb2.CreateGameFromMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
