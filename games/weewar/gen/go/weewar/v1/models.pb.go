// protos/apptemplate/v1/models.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: weewar/v1/models.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pagination struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Instead of an offset an abstract  "page" key is provided that offers
	// an opaque "pointer" into some offset in a result set.
	PageKey string `protobuf:"bytes,1,opt,name=page_key,json=pageKey,proto3" json:"page_key,omitempty"`
	// *
	// If a pagekey is not supported we can also support a direct integer offset
	// for cases where it makes sense.
	PageOffset int32 `protobuf:"varint,2,opt,name=page_offset,json=pageOffset,proto3" json:"page_offset,omitempty"`
	// *
	// Number of results to return.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_weewar_v1_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetPageKey() string {
	if x != nil {
		return x.PageKey
	}
	return ""
}

func (x *Pagination) GetPageOffset() int32 {
	if x != nil {
		return x.PageOffset
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The key/pointer string that subsequent List requests should pass to
	// continue the pagination.
	NextPageKey string `protobuf:"bytes,2,opt,name=next_page_key,json=nextPageKey,proto3" json:"next_page_key,omitempty"`
	// *
	// Also support an integer offset if possible
	NextPageOffset int32 `protobuf:"varint,3,opt,name=next_page_offset,json=nextPageOffset,proto3" json:"next_page_offset,omitempty"`
	// *
	// Whether theere are more results.
	HasMore bool `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// *
	// Total number of results.
	TotalResults  int32 `protobuf:"varint,5,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_weewar_v1_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetNextPageKey() string {
	if x != nil {
		return x.NextPageKey
	}
	return ""
}

func (x *PaginationResponse) GetNextPageOffset() int32 {
	if x != nil {
		return x.NextPageOffset
	}
	return 0
}

func (x *PaginationResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *PaginationResponse) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

type Game struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Unique ID for the game
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// User who started/created the game
	CreatorId string `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// The world this game was created from
	WorldId string `protobuf:"bytes,5,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	// Name if items have names
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Description if game has a description
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Some tags
	Tags []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	// A possible image url
	ImageUrl string `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Difficulty - example attribute
	Difficulty string `protobuf:"bytes,10,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	// Game configuration
	Config        *GameConfiguration `protobuf:"bytes,11,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Game) Reset() {
	*x = Game{}
	mi := &file_weewar_v1_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{2}
}

func (x *Game) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Game) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Game) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Game) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Game) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Game) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *Game) GetConfig() *GameConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

type GameConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Player configuration
	Players []*GamePlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	// Game settings
	Settings      *GameSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameConfiguration) Reset() {
	*x = GameConfiguration{}
	mi := &file_weewar_v1_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfiguration) ProtoMessage() {}

func (x *GameConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfiguration.ProtoReflect.Descriptor instead.
func (*GameConfiguration) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{3}
}

func (x *GameConfiguration) GetPlayers() []*GamePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameConfiguration) GetSettings() *GameSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GamePlayer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Player ID (1-based)
	PlayerId int32 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Player type
	PlayerType string `protobuf:"bytes,2,opt,name=player_type,json=playerType,proto3" json:"player_type,omitempty"` // "human", "ai", "open"
	// Player color
	Color string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	// Team ID (0 = no team, 1+ = team number)
	TeamId        int32 `protobuf:"varint,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GamePlayer) Reset() {
	*x = GamePlayer{}
	mi := &file_weewar_v1_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlayer) ProtoMessage() {}

func (x *GamePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlayer.ProtoReflect.Descriptor instead.
func (*GamePlayer) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{4}
}

func (x *GamePlayer) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *GamePlayer) GetPlayerType() string {
	if x != nil {
		return x.PlayerType
	}
	return ""
}

func (x *GamePlayer) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *GamePlayer) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type GameSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of allowed unit type IDs
	AllowedUnits []int32 `protobuf:"varint,1,rep,packed,name=allowed_units,json=allowedUnits,proto3" json:"allowed_units,omitempty"`
	// Turn time limit in seconds (0 = no limit)
	TurnTimeLimit int32 `protobuf:"varint,2,opt,name=turn_time_limit,json=turnTimeLimit,proto3" json:"turn_time_limit,omitempty"`
	// Team mode
	TeamMode string `protobuf:"bytes,3,opt,name=team_mode,json=teamMode,proto3" json:"team_mode,omitempty"` // "ffa" or "teams"
	// Maximum number of turns (0 = unlimited)
	MaxTurns      int32 `protobuf:"varint,4,opt,name=max_turns,json=maxTurns,proto3" json:"max_turns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameSettings) Reset() {
	*x = GameSettings{}
	mi := &file_weewar_v1_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSettings) ProtoMessage() {}

func (x *GameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSettings.ProtoReflect.Descriptor instead.
func (*GameSettings) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{5}
}

func (x *GameSettings) GetAllowedUnits() []int32 {
	if x != nil {
		return x.AllowedUnits
	}
	return nil
}

func (x *GameSettings) GetTurnTimeLimit() int32 {
	if x != nil {
		return x.TurnTimeLimit
	}
	return 0
}

func (x *GameSettings) GetTeamMode() string {
	if x != nil {
		return x.TeamMode
	}
	return ""
}

func (x *GameSettings) GetMaxTurns() int32 {
	if x != nil {
		return x.MaxTurns
	}
	return 0
}

type World struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Unique ID for the world
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// User that created the world
	CreatorId string `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// Name if items have names
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Description if world has a description
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Some tags
	Tags []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	// A possible image url
	ImageUrl string `protobuf:"bytes,8,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Difficulty - example attribute
	Difficulty string `protobuf:"bytes,9,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	// JSON-fied tile data about what units and terrains are at each location
	Tiles []*Tile `protobuf:"bytes,11,rep,name=tiles,proto3" json:"tiles,omitempty"`
	// All units on the world and who they belong to
	Units         []*Unit `protobuf:"bytes,12,rep,name=units,proto3" json:"units,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *World) Reset() {
	*x = World{}
	mi := &file_weewar_v1_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{6}
}

func (x *World) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *World) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *World) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *World) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *World) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *World) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *World) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *World) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *World) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *World) GetTiles() []*Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *World) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

type Tile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Q and R in Cubed coordinates
	Q        int32 `protobuf:"varint,1,opt,name=q,proto3" json:"q,omitempty"`
	R        int32 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	TileType int32 `protobuf:"varint,3,opt,name=tile_type,json=tileType,proto3" json:"tile_type,omitempty"` // Tile type
	// Whether the tile itself belongs to a player
	Player        int32 `protobuf:"varint,4,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile) Reset() {
	*x = Tile{}
	mi := &file_weewar_v1_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{7}
}

func (x *Tile) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *Tile) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Tile) GetTileType() int32 {
	if x != nil {
		return x.TileType
	}
	return 0
}

func (x *Tile) GetPlayer() int32 {
	if x != nil {
		return x.Player
	}
	return 0
}

type Unit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Q and R in Cubed coordinates
	Q             int32 `protobuf:"varint,1,opt,name=q,proto3" json:"q,omitempty"`
	R             int32 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	Player        int32 `protobuf:"varint,3,opt,name=player,proto3" json:"player,omitempty"`
	UnitType      int32 `protobuf:"varint,4,opt,name=unit_type,json=unitType,proto3" json:"unit_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Unit) Reset() {
	*x = Unit{}
	mi := &file_weewar_v1_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{8}
}

func (x *Unit) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *Unit) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Unit) GetPlayer() int32 {
	if x != nil {
		return x.Player
	}
	return 0
}

func (x *Unit) GetUnitType() int32 {
	if x != nil {
		return x.UnitType
	}
	return 0
}

type User struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Unique ID for the user
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Name if items have names
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description if user has a description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Some tags
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// A possible image url
	ImageUrl string `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Difficulty - example attribute
	Difficulty    string `protobuf:"bytes,8,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_weewar_v1_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_weewar_v1_models_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *User) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *User) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

var File_weewar_v1_models_proto protoreflect.FileDescriptor

const file_weewar_v1_models_proto_rawDesc = "" +
	"\n" +
	"\x16weewar/v1/models.proto\x12\tweewar.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"e\n" +
	"\n" +
	"Pagination\x12\x19\n" +
	"\bpage_key\x18\x01 \x01(\tR\apageKey\x12\x1f\n" +
	"\vpage_offset\x18\x02 \x01(\x05R\n" +
	"pageOffset\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\xa2\x01\n" +
	"\x12PaginationResponse\x12\"\n" +
	"\rnext_page_key\x18\x02 \x01(\tR\vnextPageKey\x12(\n" +
	"\x10next_page_offset\x18\x03 \x01(\x05R\x0enextPageOffset\x12\x19\n" +
	"\bhas_more\x18\x04 \x01(\bR\ahasMore\x12#\n" +
	"\rtotal_results\x18\x05 \x01(\x05R\ftotalResults\"\x83\x03\n" +
	"\x04Game\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x04 \x01(\tR\tcreatorId\x12\x19\n" +
	"\bworld_id\x18\x05 \x01(\tR\aworldId\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12\x1b\n" +
	"\timage_url\x18\t \x01(\tR\bimageUrl\x12\x1e\n" +
	"\n" +
	"difficulty\x18\n" +
	" \x01(\tR\n" +
	"difficulty\x124\n" +
	"\x06config\x18\v \x01(\v2\x1c.weewar.v1.GameConfigurationR\x06config\"y\n" +
	"\x11GameConfiguration\x12/\n" +
	"\aplayers\x18\x01 \x03(\v2\x15.weewar.v1.GamePlayerR\aplayers\x123\n" +
	"\bsettings\x18\x02 \x01(\v2\x17.weewar.v1.GameSettingsR\bsettings\"y\n" +
	"\n" +
	"GamePlayer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12\x1f\n" +
	"\vplayer_type\x18\x02 \x01(\tR\n" +
	"playerType\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12\x17\n" +
	"\ateam_id\x18\x04 \x01(\x05R\x06teamId\"\x95\x01\n" +
	"\fGameSettings\x12#\n" +
	"\rallowed_units\x18\x01 \x03(\x05R\fallowedUnits\x12&\n" +
	"\x0fturn_time_limit\x18\x02 \x01(\x05R\rturnTimeLimit\x12\x1b\n" +
	"\tteam_mode\x18\x03 \x01(\tR\bteamMode\x12\x1b\n" +
	"\tmax_turns\x18\x04 \x01(\x05R\bmaxTurns\"\x81\x03\n" +
	"\x05World\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x04 \x01(\tR\tcreatorId\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x1b\n" +
	"\timage_url\x18\b \x01(\tR\bimageUrl\x12\x1e\n" +
	"\n" +
	"difficulty\x18\t \x01(\tR\n" +
	"difficulty\x12%\n" +
	"\x05tiles\x18\v \x03(\v2\x0f.weewar.v1.TileR\x05tiles\x12%\n" +
	"\x05units\x18\f \x03(\v2\x0f.weewar.v1.UnitR\x05units\"W\n" +
	"\x04Tile\x12\f\n" +
	"\x01q\x18\x01 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x02 \x01(\x05R\x01r\x12\x1b\n" +
	"\ttile_type\x18\x03 \x01(\x05R\btileType\x12\x16\n" +
	"\x06player\x18\x04 \x01(\x05R\x06player\"W\n" +
	"\x04Unit\x12\f\n" +
	"\x01q\x18\x01 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x02 \x01(\x05R\x01r\x12\x16\n" +
	"\x06player\x18\x03 \x01(\x05R\x06player\x12\x1b\n" +
	"\tunit_type\x18\x04 \x01(\x05R\bunitType\"\x93\x02\n" +
	"\x04User\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x1b\n" +
	"\timage_url\x18\a \x01(\tR\bimageUrl\x12\x1e\n" +
	"\n" +
	"difficulty\x18\b \x01(\tR\n" +
	"difficultyB\x9d\x01\n" +
	"\rcom.weewar.v1B\vModelsProtoP\x01Z:github.com/panyam/turnengine/games/weewar/gen/go/weewar/v1\xa2\x02\x03WXX\xaa\x02\tWeewar.V1\xca\x02\tWeewar\\V1\xe2\x02\x15Weewar\\V1\\GPBMetadata\xea\x02\n" +
	"Weewar::V1b\x06proto3"

var (
	file_weewar_v1_models_proto_rawDescOnce sync.Once
	file_weewar_v1_models_proto_rawDescData []byte
)

func file_weewar_v1_models_proto_rawDescGZIP() []byte {
	file_weewar_v1_models_proto_rawDescOnce.Do(func() {
		file_weewar_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_weewar_v1_models_proto_rawDesc), len(file_weewar_v1_models_proto_rawDesc)))
	})
	return file_weewar_v1_models_proto_rawDescData
}

var file_weewar_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_weewar_v1_models_proto_goTypes = []any{
	(*Pagination)(nil),            // 0: weewar.v1.Pagination
	(*PaginationResponse)(nil),    // 1: weewar.v1.PaginationResponse
	(*Game)(nil),                  // 2: weewar.v1.Game
	(*GameConfiguration)(nil),     // 3: weewar.v1.GameConfiguration
	(*GamePlayer)(nil),            // 4: weewar.v1.GamePlayer
	(*GameSettings)(nil),          // 5: weewar.v1.GameSettings
	(*World)(nil),                 // 6: weewar.v1.World
	(*Tile)(nil),                  // 7: weewar.v1.Tile
	(*Unit)(nil),                  // 8: weewar.v1.Unit
	(*User)(nil),                  // 9: weewar.v1.User
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_weewar_v1_models_proto_depIdxs = []int32{
	10, // 0: weewar.v1.Game.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: weewar.v1.Game.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 2: weewar.v1.Game.config:type_name -> weewar.v1.GameConfiguration
	4,  // 3: weewar.v1.GameConfiguration.players:type_name -> weewar.v1.GamePlayer
	5,  // 4: weewar.v1.GameConfiguration.settings:type_name -> weewar.v1.GameSettings
	10, // 5: weewar.v1.World.created_at:type_name -> google.protobuf.Timestamp
	10, // 6: weewar.v1.World.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 7: weewar.v1.World.tiles:type_name -> weewar.v1.Tile
	8,  // 8: weewar.v1.World.units:type_name -> weewar.v1.Unit
	10, // 9: weewar.v1.User.created_at:type_name -> google.protobuf.Timestamp
	10, // 10: weewar.v1.User.updated_at:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_weewar_v1_models_proto_init() }
func file_weewar_v1_models_proto_init() {
	if File_weewar_v1_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_weewar_v1_models_proto_rawDesc), len(file_weewar_v1_models_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_weewar_v1_models_proto_goTypes,
		DependencyIndexes: file_weewar_v1_models_proto_depIdxs,
		MessageInfos:      file_weewar_v1_models_proto_msgTypes,
	}.Build()
	File_weewar_v1_models_proto = out.File
	file_weewar_v1_models_proto_goTypes = nil
	file_weewar_v1_models_proto_depIdxs = nil
}
