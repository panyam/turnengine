// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: weewar/v1/games.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameInfo represents a game in the catalog
type GameInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Difficulty    string                 `protobuf:"bytes,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Icon          string                 `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	mi := &file_weewar_v1_games_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{0}
}

func (x *GameInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GameInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GameInfo) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *GameInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GameInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GameInfo) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// Request messages
type ListGamesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pagination info
	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// May be filter by owner id
	OwnerId       string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGamesRequest) Reset() {
	*x = ListGamesRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesRequest) ProtoMessage() {}

func (x *ListGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesRequest.ProtoReflect.Descriptor instead.
func (*ListGamesRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{1}
}

func (x *ListGamesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListGamesRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type ListGamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Game                `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGamesResponse) Reset() {
	*x = ListGamesResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse) ProtoMessage() {}

func (x *ListGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse.ProtoReflect.Descriptor instead.
func (*ListGamesResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{2}
}

func (x *ListGamesResponse) GetItems() []*Game {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListGamesResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Optional, defaults to default_version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{3}
}

func (x *GetGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGameRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Game          *Game                  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameResponse) Reset() {
	*x = GetGameResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameResponse) ProtoMessage() {}

func (x *GetGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameResponse.ProtoReflect.Descriptor instead.
func (*GetGameResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{4}
}

func (x *GetGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type GetGameContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Optional, defaults to default_version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameContentRequest) Reset() {
	*x = GetGameContentRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameContentRequest) ProtoMessage() {}

func (x *GetGameContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameContentRequest.ProtoReflect.Descriptor instead.
func (*GetGameContentRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{5}
}

func (x *GetGameContentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGameContentRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetGameContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeewarContent string                 `protobuf:"bytes,1,opt,name=weewar_content,json=weewarContent,proto3" json:"weewar_content,omitempty"`
	RecipeContent string                 `protobuf:"bytes,2,opt,name=recipe_content,json=recipeContent,proto3" json:"recipe_content,omitempty"`
	ReadmeContent string                 `protobuf:"bytes,3,opt,name=readme_content,json=readmeContent,proto3" json:"readme_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameContentResponse) Reset() {
	*x = GetGameContentResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameContentResponse) ProtoMessage() {}

func (x *GetGameContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameContentResponse.ProtoReflect.Descriptor instead.
func (*GetGameContentResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{6}
}

func (x *GetGameContentResponse) GetWeewarContent() string {
	if x != nil {
		return x.WeewarContent
	}
	return ""
}

func (x *GetGameContentResponse) GetRecipeContent() string {
	if x != nil {
		return x.RecipeContent
	}
	return ""
}

func (x *GetGameContentResponse) GetReadmeContent() string {
	if x != nil {
		return x.ReadmeContent
	}
	return ""
}

type UpdateGameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Game being updated
	Game *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	// *
	// Mask of fields being updated in this Game to make partial changes.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGameRequest) Reset() {
	*x = UpdateGameRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameRequest) ProtoMessage() {}

func (x *UpdateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGameRequest) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *UpdateGameRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// *
// The request for (partially) updating an Game.
type UpdateGameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Game being updated
	Game          *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGameResponse) Reset() {
	*x = UpdateGameResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameResponse) ProtoMessage() {}

func (x *UpdateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameResponse.ProtoReflect.Descriptor instead.
func (*UpdateGameResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

// *
// Request to delete an game.
type DeleteGameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// ID of the game to be deleted.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGameRequest) Reset() {
	*x = DeleteGameRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameRequest) ProtoMessage() {}

func (x *DeleteGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameRequest.ProtoReflect.Descriptor instead.
func (*DeleteGameRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// *
// Game deletion response
type DeleteGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGameResponse) Reset() {
	*x = DeleteGameResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameResponse) ProtoMessage() {}

func (x *DeleteGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameResponse.ProtoReflect.Descriptor instead.
func (*DeleteGameResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{10}
}

// *
// Request to batch get games
type GetGamesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// IDs of the game to be fetched
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGamesRequest) Reset() {
	*x = GetGamesRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesRequest) ProtoMessage() {}

func (x *GetGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesRequest.ProtoReflect.Descriptor instead.
func (*GetGamesRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{11}
}

func (x *GetGamesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// *
// Game batch-get response
type GetGamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Games         map[string]*Game       `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGamesResponse) Reset() {
	*x = GetGamesResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesResponse) ProtoMessage() {}

func (x *GetGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesResponse.ProtoReflect.Descriptor instead.
func (*GetGamesResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{12}
}

func (x *GetGamesResponse) GetGames() map[string]*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

// *
// Game creation request object
type CreateGameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Game being updated
	Game          *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{13}
}

func (x *CreateGameRequest) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

// *
// Response of an game creation.
type CreateGameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Game being created
	Game *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	// *
	// Error specific to a field if there are any errors.
	FieldErrors   map[string]string `protobuf:"bytes,2,rep,name=field_errors,json=fieldErrors,proto3" json:"field_errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{14}
}

func (x *CreateGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *CreateGameResponse) GetFieldErrors() map[string]string {
	if x != nil {
		return x.FieldErrors
	}
	return nil
}

// *
// Request to add moves to a game
// The model is that a game in each "tick" can handle multiple moves (by possibly various players).
// It is upto the move manager/processor in the game to ensure the "transaction" of moves is handled
// atomically.
//
// For example we may have 3 moves where first two units are moved to a common location
// and then they attack another unit.  Here If we treat it as a single unit attacking it
// will have different outcomes than a "combined" attack.
type ProcessMovesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Game ID to add moves to
	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// *
	// List of moves to add
	Moves         []*GameMove `protobuf:"bytes,3,rep,name=moves,proto3" json:"moves,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMovesRequest) Reset() {
	*x = ProcessMovesRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMovesRequest) ProtoMessage() {}

func (x *ProcessMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMovesRequest.ProtoReflect.Descriptor instead.
func (*ProcessMovesRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessMovesRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ProcessMovesRequest) GetMoves() []*GameMove {
	if x != nil {
		return x.Moves
	}
	return nil
}

// *
// Response after adding moves to game.
type ProcessMovesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Each game move result stores the result of the individual Move in the request.
	// ie move_results[i] = ResultOfProcessing(ProcessMoveRequest.moves[i])
	MoveResults []*GameMoveResult `protobuf:"bytes,1,rep,name=move_results,json=moveResults,proto3" json:"move_results,omitempty"`
	// *
	// List of changes that resulted from the moves on the game state as a whole
	// For example 10 moves could have resulted in 2 unit creations and 4 city changes
	//
	// It is not clear if this is needed.  For example concatenating all changes from all the move_results *may* suffice
	// as long as the MoveProcessor is making sure that updates are atomic and snapshots the world state before
	// starting a snapshot (and not just a move)
	Changes       []*WorldChange `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMovesResponse) Reset() {
	*x = ProcessMovesResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMovesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMovesResponse) ProtoMessage() {}

func (x *ProcessMovesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMovesResponse.ProtoReflect.Descriptor instead.
func (*ProcessMovesResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{16}
}

func (x *ProcessMovesResponse) GetMoveResults() []*GameMoveResult {
	if x != nil {
		return x.MoveResults
	}
	return nil
}

func (x *ProcessMovesResponse) GetChanges() []*WorldChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

// *
// Request to get movement options for a unit at a position
type GetMovementOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Q             int32                  `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovementOptionsRequest) Reset() {
	*x = GetMovementOptionsRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovementOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovementOptionsRequest) ProtoMessage() {}

func (x *GetMovementOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovementOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetMovementOptionsRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{17}
}

func (x *GetMovementOptionsRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetMovementOptionsRequest) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *GetMovementOptionsRequest) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

// *
// Response with movement options for a unit
type GetMovementOptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       []*MovementOption      `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovementOptionsResponse) Reset() {
	*x = GetMovementOptionsResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovementOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovementOptionsResponse) ProtoMessage() {}

func (x *GetMovementOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovementOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetMovementOptionsResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{18}
}

func (x *GetMovementOptionsResponse) GetOptions() []*MovementOption {
	if x != nil {
		return x.Options
	}
	return nil
}

// *
// A possible movement destination with cost
type MovementOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Q             int32                  `protobuf:"varint,1,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	MovementCost  int32                  `protobuf:"varint,3,opt,name=movement_cost,json=movementCost,proto3" json:"movement_cost,omitempty"`
	IsValid       bool                   `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovementOption) Reset() {
	*x = MovementOption{}
	mi := &file_weewar_v1_games_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovementOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementOption) ProtoMessage() {}

func (x *MovementOption) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementOption.ProtoReflect.Descriptor instead.
func (*MovementOption) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{19}
}

func (x *MovementOption) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *MovementOption) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *MovementOption) GetMovementCost() int32 {
	if x != nil {
		return x.MovementCost
	}
	return 0
}

func (x *MovementOption) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// *
// Request to get attack options for a unit at a position
type GetAttackOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Q             int32                  `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttackOptionsRequest) Reset() {
	*x = GetAttackOptionsRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttackOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackOptionsRequest) ProtoMessage() {}

func (x *GetAttackOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetAttackOptionsRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{20}
}

func (x *GetAttackOptionsRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetAttackOptionsRequest) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *GetAttackOptionsRequest) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

// *
// Response with attack options for a unit
type GetAttackOptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       []*AttackOption        `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttackOptionsResponse) Reset() {
	*x = GetAttackOptionsResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttackOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttackOptionsResponse) ProtoMessage() {}

func (x *GetAttackOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttackOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetAttackOptionsResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{21}
}

func (x *GetAttackOptionsResponse) GetOptions() []*AttackOption {
	if x != nil {
		return x.Options
	}
	return nil
}

// *
// A possible attack target
type AttackOption struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Q              int32                  `protobuf:"varint,1,opt,name=q,proto3" json:"q,omitempty"`
	R              int32                  `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	CanAttack      bool                   `protobuf:"varint,3,opt,name=can_attack,json=canAttack,proto3" json:"can_attack,omitempty"`
	DamageEstimate int32                  `protobuf:"varint,4,opt,name=damage_estimate,json=damageEstimate,proto3" json:"damage_estimate,omitempty"` // Estimated damage this attack would deal
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AttackOption) Reset() {
	*x = AttackOption{}
	mi := &file_weewar_v1_games_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttackOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackOption) ProtoMessage() {}

func (x *AttackOption) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackOption.ProtoReflect.Descriptor instead.
func (*AttackOption) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{22}
}

func (x *AttackOption) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *AttackOption) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *AttackOption) GetCanAttack() bool {
	if x != nil {
		return x.CanAttack
	}
	return false
}

func (x *AttackOption) GetDamageEstimate() int32 {
	if x != nil {
		return x.DamageEstimate
	}
	return 0
}

// *
// Request to get tile information
type GetTileInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Q             int32                  `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTileInfoRequest) Reset() {
	*x = GetTileInfoRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTileInfoRequest) ProtoMessage() {}

func (x *GetTileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTileInfoRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{23}
}

func (x *GetTileInfoRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetTileInfoRequest) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *GetTileInfoRequest) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

// *
// Response with tile information
type GetTileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tile          *TileInfo              `protobuf:"bytes,1,opt,name=tile,proto3" json:"tile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTileInfoResponse) Reset() {
	*x = GetTileInfoResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTileInfoResponse) ProtoMessage() {}

func (x *GetTileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTileInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTileInfoResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{24}
}

func (x *GetTileInfoResponse) GetTile() *TileInfo {
	if x != nil {
		return x.Tile
	}
	return nil
}

// *
// Complete information about a tile
type TileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Q             int32                  `protobuf:"varint,1,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	TerrainType   string                 `protobuf:"bytes,3,opt,name=terrain_type,json=terrainType,proto3" json:"terrain_type,omitempty"`
	Unit          *UnitInfo              `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`         // null if no unit on tile
	Building      *BuildingInfo          `protobuf:"bytes,5,opt,name=building,proto3" json:"building,omitempty"` // null if no building on tile
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TileInfo) Reset() {
	*x = TileInfo{}
	mi := &file_weewar_v1_games_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileInfo) ProtoMessage() {}

func (x *TileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileInfo.ProtoReflect.Descriptor instead.
func (*TileInfo) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{25}
}

func (x *TileInfo) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *TileInfo) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *TileInfo) GetTerrainType() string {
	if x != nil {
		return x.TerrainType
	}
	return ""
}

func (x *TileInfo) GetUnit() *UnitInfo {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *TileInfo) GetBuilding() *BuildingInfo {
	if x != nil {
		return x.Building
	}
	return nil
}

// *
// Information about a unit on a tile
type UnitInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        int32                  `protobuf:"varint,1,opt,name=player,proto3" json:"player,omitempty"`
	UnitType      int32                  `protobuf:"varint,2,opt,name=unit_type,json=unitType,proto3" json:"unit_type,omitempty"`
	Health        int32                  `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	MaxHealth     int32                  `protobuf:"varint,4,opt,name=max_health,json=maxHealth,proto3" json:"max_health,omitempty"`
	HasMoved      bool                   `protobuf:"varint,5,opt,name=has_moved,json=hasMoved,proto3" json:"has_moved,omitempty"`
	HasAttacked   bool                   `protobuf:"varint,6,opt,name=has_attacked,json=hasAttacked,proto3" json:"has_attacked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnitInfo) Reset() {
	*x = UnitInfo{}
	mi := &file_weewar_v1_games_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitInfo) ProtoMessage() {}

func (x *UnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitInfo.ProtoReflect.Descriptor instead.
func (*UnitInfo) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{26}
}

func (x *UnitInfo) GetPlayer() int32 {
	if x != nil {
		return x.Player
	}
	return 0
}

func (x *UnitInfo) GetUnitType() int32 {
	if x != nil {
		return x.UnitType
	}
	return 0
}

func (x *UnitInfo) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *UnitInfo) GetMaxHealth() int32 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *UnitInfo) GetHasMoved() bool {
	if x != nil {
		return x.HasMoved
	}
	return false
}

func (x *UnitInfo) GetHasAttacked() bool {
	if x != nil {
		return x.HasAttacked
	}
	return false
}

// *
// Information about a building on a tile
type BuildingInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildingType  int32                  `protobuf:"varint,1,opt,name=building_type,json=buildingType,proto3" json:"building_type,omitempty"`
	Owner         int32                  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`                                      // -1 if neutral
	CapturePoints int32                  `protobuf:"varint,3,opt,name=capture_points,json=capturePoints,proto3" json:"capture_points,omitempty"` // for capturable buildings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildingInfo) Reset() {
	*x = BuildingInfo{}
	mi := &file_weewar_v1_games_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingInfo) ProtoMessage() {}

func (x *BuildingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingInfo.ProtoReflect.Descriptor instead.
func (*BuildingInfo) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{27}
}

func (x *BuildingInfo) GetBuildingType() int32 {
	if x != nil {
		return x.BuildingType
	}
	return 0
}

func (x *BuildingInfo) GetOwner() int32 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *BuildingInfo) GetCapturePoints() int32 {
	if x != nil {
		return x.CapturePoints
	}
	return 0
}

// *
// Request to get terrain statistics
type GetTerrainStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Q             int32                  `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerrainStatsRequest) Reset() {
	*x = GetTerrainStatsRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerrainStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerrainStatsRequest) ProtoMessage() {}

func (x *GetTerrainStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerrainStatsRequest.ProtoReflect.Descriptor instead.
func (*GetTerrainStatsRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{28}
}

func (x *GetTerrainStatsRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetTerrainStatsRequest) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *GetTerrainStatsRequest) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

// *
// Response with terrain statistics
type GetTerrainStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *TerrainStats          `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTerrainStatsResponse) Reset() {
	*x = GetTerrainStatsResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTerrainStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTerrainStatsResponse) ProtoMessage() {}

func (x *GetTerrainStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTerrainStatsResponse.ProtoReflect.Descriptor instead.
func (*GetTerrainStatsResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{29}
}

func (x *GetTerrainStatsResponse) GetStats() *TerrainStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// *
// Statistics about terrain at a specific tile
type TerrainStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TerrainType    string                 `protobuf:"bytes,1,opt,name=terrain_type,json=terrainType,proto3" json:"terrain_type,omitempty"`
	MovementCost   int32                  `protobuf:"varint,2,opt,name=movement_cost,json=movementCost,proto3" json:"movement_cost,omitempty"`
	DefenseBonus   int32                  `protobuf:"varint,3,opt,name=defense_bonus,json=defenseBonus,proto3" json:"defense_bonus,omitempty"` // percentage defense bonus (0-100)
	BlocksMovement bool                   `protobuf:"varint,4,opt,name=blocks_movement,json=blocksMovement,proto3" json:"blocks_movement,omitempty"`
	CanCapture     bool                   `protobuf:"varint,5,opt,name=can_capture,json=canCapture,proto3" json:"can_capture,omitempty"` // if this tile can be captured
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TerrainStats) Reset() {
	*x = TerrainStats{}
	mi := &file_weewar_v1_games_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerrainStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainStats) ProtoMessage() {}

func (x *TerrainStats) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainStats.ProtoReflect.Descriptor instead.
func (*TerrainStats) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{30}
}

func (x *TerrainStats) GetTerrainType() string {
	if x != nil {
		return x.TerrainType
	}
	return ""
}

func (x *TerrainStats) GetMovementCost() int32 {
	if x != nil {
		return x.MovementCost
	}
	return 0
}

func (x *TerrainStats) GetDefenseBonus() int32 {
	if x != nil {
		return x.DefenseBonus
	}
	return 0
}

func (x *TerrainStats) GetBlocksMovement() bool {
	if x != nil {
		return x.BlocksMovement
	}
	return false
}

func (x *TerrainStats) GetCanCapture() bool {
	if x != nil {
		return x.CanCapture
	}
	return false
}

// *
// Request to check if a unit can be selected
type CanSelectUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Q             int32                  `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	PlayerId      int32                  `protobuf:"varint,4,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // which player is trying to select
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanSelectUnitRequest) Reset() {
	*x = CanSelectUnitRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanSelectUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSelectUnitRequest) ProtoMessage() {}

func (x *CanSelectUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSelectUnitRequest.ProtoReflect.Descriptor instead.
func (*CanSelectUnitRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{31}
}

func (x *CanSelectUnitRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *CanSelectUnitRequest) GetQ() int32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *CanSelectUnitRequest) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *CanSelectUnitRequest) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// *
// Response indicating if unit can be selected
type CanSelectUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CanSelect     bool                   `protobuf:"varint,1,opt,name=can_select,json=canSelect,proto3" json:"can_select,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // explanation if can_select is false
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanSelectUnitResponse) Reset() {
	*x = CanSelectUnitResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanSelectUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSelectUnitResponse) ProtoMessage() {}

func (x *CanSelectUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSelectUnitResponse.ProtoReflect.Descriptor instead.
func (*CanSelectUnitResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{32}
}

func (x *CanSelectUnitResponse) GetCanSelect() bool {
	if x != nil {
		return x.CanSelect
	}
	return false
}

func (x *CanSelectUnitResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// *
// Request to create a game from map data
type CreateGameFromMapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapData       string                 `protobuf:"bytes,1,opt,name=map_data,json=mapData,proto3" json:"map_data,omitempty"` // JSON or other format containing map information
	Players       []*GamePlayer          `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Settings      *GameSettings          `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameFromMapRequest) Reset() {
	*x = CreateGameFromMapRequest{}
	mi := &file_weewar_v1_games_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameFromMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameFromMapRequest) ProtoMessage() {}

func (x *CreateGameFromMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameFromMapRequest.ProtoReflect.Descriptor instead.
func (*CreateGameFromMapRequest) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{33}
}

func (x *CreateGameFromMapRequest) GetMapData() string {
	if x != nil {
		return x.MapData
	}
	return ""
}

func (x *CreateGameFromMapRequest) GetPlayers() []*GamePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *CreateGameFromMapRequest) GetSettings() *GameSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// *
// Response after creating game from map
type CreateGameFromMapResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Game          *Game                  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	InitialWorld  *World                 `protobuf:"bytes,2,opt,name=initial_world,json=initialWorld,proto3" json:"initial_world,omitempty"` // The initial world state
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameFromMapResponse) Reset() {
	*x = CreateGameFromMapResponse{}
	mi := &file_weewar_v1_games_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameFromMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameFromMapResponse) ProtoMessage() {}

func (x *CreateGameFromMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weewar_v1_games_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameFromMapResponse.ProtoReflect.Descriptor instead.
func (*CreateGameFromMapResponse) Descriptor() ([]byte, []int) {
	return file_weewar_v1_games_proto_rawDescGZIP(), []int{34}
}

func (x *CreateGameFromMapResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *CreateGameFromMapResponse) GetInitialWorld() *World {
	if x != nil {
		return x.InitialWorld
	}
	return nil
}

var File_weewar_v1_games_proto protoreflect.FileDescriptor

const file_weewar_v1_games_proto_rawDesc = "" +
	"\n" +
	"\x15weewar/v1/games.proto\x12\tweewar.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x16weewar/v1/models.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xd7\x01\n" +
	"\bGameInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x05 \x01(\tR\n" +
	"difficulty\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x12\n" +
	"\x04icon\x18\a \x01(\tR\x04icon\x12!\n" +
	"\flast_updated\x18\b \x01(\tR\vlastUpdated\"d\n" +
	"\x10ListGamesRequest\x125\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x15.weewar.v1.PaginationR\n" +
	"pagination\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\"y\n" +
	"\x11ListGamesResponse\x12%\n" +
	"\x05items\x18\x01 \x03(\v2\x0f.weewar.v1.GameR\x05items\x12=\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1d.weewar.v1.PaginationResponseR\n" +
	"pagination\":\n" +
	"\x0eGetGameRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"6\n" +
	"\x0fGetGameResponse\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game\"A\n" +
	"\x15GetGameContentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\x8d\x01\n" +
	"\x16GetGameContentResponse\x12%\n" +
	"\x0eweewar_content\x18\x01 \x01(\tR\rweewarContent\x12%\n" +
	"\x0erecipe_content\x18\x02 \x01(\tR\rrecipeContent\x12%\n" +
	"\x0ereadme_content\x18\x03 \x01(\tR\rreadmeContent\"\x8f\x01\n" +
	"\x11UpdateGameRequest\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask:\x18\x92A\x15\n" +
	"\x13*\x11UpdateGameRequest\"T\n" +
	"\x12UpdateGameResponse\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game:\x19\x92A\x16\n" +
	"\x14*\x12UpdateGameResponse\"#\n" +
	"\x11DeleteGameRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x14\n" +
	"\x12DeleteGameResponse\"#\n" +
	"\x0fGetGamesRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"\x9b\x01\n" +
	"\x10GetGamesResponse\x12<\n" +
	"\x05games\x18\x01 \x03(\v2&.weewar.v1.GetGamesResponse.GamesEntryR\x05games\x1aI\n" +
	"\n" +
	"GamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.weewar.v1.GameR\x05value:\x028\x01\"8\n" +
	"\x11CreateGameRequest\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game\"\xcc\x01\n" +
	"\x12CreateGameResponse\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game\x12Q\n" +
	"\ffield_errors\x18\x02 \x03(\v2..weewar.v1.CreateGameResponse.FieldErrorsEntryR\vfieldErrors\x1a>\n" +
	"\x10FieldErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Y\n" +
	"\x13ProcessMovesRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12)\n" +
	"\x05moves\x18\x03 \x03(\v2\x13.weewar.v1.GameMoveR\x05moves\"\x86\x01\n" +
	"\x14ProcessMovesResponse\x12<\n" +
	"\fmove_results\x18\x01 \x03(\v2\x19.weewar.v1.GameMoveResultR\vmoveResults\x120\n" +
	"\achanges\x18\x02 \x03(\v2\x16.weewar.v1.WorldChangeR\achanges\"P\n" +
	"\x19GetMovementOptionsRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\f\n" +
	"\x01q\x18\x02 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\"Q\n" +
	"\x1aGetMovementOptionsResponse\x123\n" +
	"\aoptions\x18\x01 \x03(\v2\x19.weewar.v1.MovementOptionR\aoptions\"l\n" +
	"\x0eMovementOption\x12\f\n" +
	"\x01q\x18\x01 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x02 \x01(\x05R\x01r\x12#\n" +
	"\rmovement_cost\x18\x03 \x01(\x05R\fmovementCost\x12\x19\n" +
	"\bis_valid\x18\x04 \x01(\bR\aisValid\"N\n" +
	"\x17GetAttackOptionsRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\f\n" +
	"\x01q\x18\x02 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\"M\n" +
	"\x18GetAttackOptionsResponse\x121\n" +
	"\aoptions\x18\x01 \x03(\v2\x17.weewar.v1.AttackOptionR\aoptions\"r\n" +
	"\fAttackOption\x12\f\n" +
	"\x01q\x18\x01 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x02 \x01(\x05R\x01r\x12\x1d\n" +
	"\n" +
	"can_attack\x18\x03 \x01(\bR\tcanAttack\x12'\n" +
	"\x0fdamage_estimate\x18\x04 \x01(\x05R\x0edamageEstimate\"I\n" +
	"\x12GetTileInfoRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\f\n" +
	"\x01q\x18\x02 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\">\n" +
	"\x13GetTileInfoResponse\x12'\n" +
	"\x04tile\x18\x01 \x01(\v2\x13.weewar.v1.TileInfoR\x04tile\"\xa7\x01\n" +
	"\bTileInfo\x12\f\n" +
	"\x01q\x18\x01 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x02 \x01(\x05R\x01r\x12!\n" +
	"\fterrain_type\x18\x03 \x01(\tR\vterrainType\x12'\n" +
	"\x04unit\x18\x04 \x01(\v2\x13.weewar.v1.UnitInfoR\x04unit\x123\n" +
	"\bbuilding\x18\x05 \x01(\v2\x17.weewar.v1.BuildingInfoR\bbuilding\"\xb6\x01\n" +
	"\bUnitInfo\x12\x16\n" +
	"\x06player\x18\x01 \x01(\x05R\x06player\x12\x1b\n" +
	"\tunit_type\x18\x02 \x01(\x05R\bunitType\x12\x16\n" +
	"\x06health\x18\x03 \x01(\x05R\x06health\x12\x1d\n" +
	"\n" +
	"max_health\x18\x04 \x01(\x05R\tmaxHealth\x12\x1b\n" +
	"\thas_moved\x18\x05 \x01(\bR\bhasMoved\x12!\n" +
	"\fhas_attacked\x18\x06 \x01(\bR\vhasAttacked\"p\n" +
	"\fBuildingInfo\x12#\n" +
	"\rbuilding_type\x18\x01 \x01(\x05R\fbuildingType\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\x05R\x05owner\x12%\n" +
	"\x0ecapture_points\x18\x03 \x01(\x05R\rcapturePoints\"M\n" +
	"\x16GetTerrainStatsRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\f\n" +
	"\x01q\x18\x02 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\"H\n" +
	"\x17GetTerrainStatsResponse\x12-\n" +
	"\x05stats\x18\x01 \x01(\v2\x17.weewar.v1.TerrainStatsR\x05stats\"\xc5\x01\n" +
	"\fTerrainStats\x12!\n" +
	"\fterrain_type\x18\x01 \x01(\tR\vterrainType\x12#\n" +
	"\rmovement_cost\x18\x02 \x01(\x05R\fmovementCost\x12#\n" +
	"\rdefense_bonus\x18\x03 \x01(\x05R\fdefenseBonus\x12'\n" +
	"\x0fblocks_movement\x18\x04 \x01(\bR\x0eblocksMovement\x12\x1f\n" +
	"\vcan_capture\x18\x05 \x01(\bR\n" +
	"canCapture\"h\n" +
	"\x14CanSelectUnitRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\f\n" +
	"\x01q\x18\x02 \x01(\x05R\x01q\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\x12\x1b\n" +
	"\tplayer_id\x18\x04 \x01(\x05R\bplayerId\"N\n" +
	"\x15CanSelectUnitResponse\x12\x1d\n" +
	"\n" +
	"can_select\x18\x01 \x01(\bR\tcanSelect\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x9b\x01\n" +
	"\x18CreateGameFromMapRequest\x12\x19\n" +
	"\bmap_data\x18\x01 \x01(\tR\amapData\x12/\n" +
	"\aplayers\x18\x02 \x03(\v2\x15.weewar.v1.GamePlayerR\aplayers\x123\n" +
	"\bsettings\x18\x03 \x01(\v2\x17.weewar.v1.GameSettingsR\bsettings\"w\n" +
	"\x19CreateGameFromMapResponse\x12#\n" +
	"\x04game\x18\x01 \x01(\v2\x0f.weewar.v1.GameR\x04game\x125\n" +
	"\rinitial_world\x18\x02 \x01(\v2\x10.weewar.v1.WorldR\finitialWorld2\xee\v\n" +
	"\fGamesService\x12_\n" +
	"\n" +
	"CreateGame\x12\x1c.weewar.v1.CreateGameRequest\x1a\x1d.weewar.v1.CreateGameResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/games\x12_\n" +
	"\bGetGames\x12\x1a.weewar.v1.GetGamesRequest\x1a\x1b.weewar.v1.GetGamesResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/games:batchGet\x12Y\n" +
	"\tListGames\x12\x1b.weewar.v1.ListGamesRequest\x1a\x1c.weewar.v1.ListGamesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/games\x12X\n" +
	"\aGetGame\x12\x19.weewar.v1.GetGameRequest\x1a\x1a.weewar.v1.GetGameResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/games/{id}\x12c\n" +
	"\n" +
	"DeleteGame\x12\x1c.weewar.v1.DeleteGameRequest\x1a\x1d.weewar.v1.DeleteGameResponse\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/v1/games/{id=*}\x12k\n" +
	"\n" +
	"UpdateGame\x12\x1c.weewar.v1.UpdateGameRequest\x1a\x1d.weewar.v1.UpdateGameResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*2\x15/v1/games/{game.id=*}\x12u\n" +
	"\fProcessMoves\x12\x1e.weewar.v1.ProcessMovesRequest\x1a\x1f.weewar.v1.ProcessMovesResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/games/{game_id}/moves\x12\x8f\x01\n" +
	"\x12GetMovementOptions\x12$.weewar.v1.GetMovementOptionsRequest\x1a%.weewar.v1.GetMovementOptionsResponse\",\x82\xd3\xe4\x93\x02&\x12$/v1/games/{game_id}/movement/{q}/{r}\x12\x87\x01\n" +
	"\x10GetAttackOptions\x12\".weewar.v1.GetAttackOptionsRequest\x1a#.weewar.v1.GetAttackOptionsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/games/{game_id}/attack/{q}/{r}\x12v\n" +
	"\vGetTileInfo\x12\x1d.weewar.v1.GetTileInfoRequest\x1a\x1e.weewar.v1.GetTileInfoResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /v1/games/{game_id}/tile/{q}/{r}\x12\x85\x01\n" +
	"\x0fGetTerrainStats\x12!.weewar.v1.GetTerrainStatsRequest\x1a\".weewar.v1.GetTerrainStatsResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/games/{game_id}/terrain/{q}/{r}\x12\x82\x01\n" +
	"\rCanSelectUnit\x12\x1f.weewar.v1.CanSelectUnitRequest\x1a .weewar.v1.CanSelectUnitResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1/games/{game_id}/can-select/{q}/{r}\x12}\n" +
	"\x11CreateGameFromMap\x12#.weewar.v1.CreateGameFromMapRequest\x1a$.weewar.v1.CreateGameFromMapResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/games/from-mapB\x9c\x01\n" +
	"\rcom.weewar.v1B\n" +
	"GamesProtoP\x01Z:github.com/panyam/turnengine/games/weewar/gen/go/weewar/v1\xa2\x02\x03WXX\xaa\x02\tWeewar.V1\xca\x02\tWeewar\\V1\xe2\x02\x15Weewar\\V1\\GPBMetadata\xea\x02\n" +
	"Weewar::V1b\x06proto3"

var (
	file_weewar_v1_games_proto_rawDescOnce sync.Once
	file_weewar_v1_games_proto_rawDescData []byte
)

func file_weewar_v1_games_proto_rawDescGZIP() []byte {
	file_weewar_v1_games_proto_rawDescOnce.Do(func() {
		file_weewar_v1_games_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_weewar_v1_games_proto_rawDesc), len(file_weewar_v1_games_proto_rawDesc)))
	})
	return file_weewar_v1_games_proto_rawDescData
}

var file_weewar_v1_games_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_weewar_v1_games_proto_goTypes = []any{
	(*GameInfo)(nil),                   // 0: weewar.v1.GameInfo
	(*ListGamesRequest)(nil),           // 1: weewar.v1.ListGamesRequest
	(*ListGamesResponse)(nil),          // 2: weewar.v1.ListGamesResponse
	(*GetGameRequest)(nil),             // 3: weewar.v1.GetGameRequest
	(*GetGameResponse)(nil),            // 4: weewar.v1.GetGameResponse
	(*GetGameContentRequest)(nil),      // 5: weewar.v1.GetGameContentRequest
	(*GetGameContentResponse)(nil),     // 6: weewar.v1.GetGameContentResponse
	(*UpdateGameRequest)(nil),          // 7: weewar.v1.UpdateGameRequest
	(*UpdateGameResponse)(nil),         // 8: weewar.v1.UpdateGameResponse
	(*DeleteGameRequest)(nil),          // 9: weewar.v1.DeleteGameRequest
	(*DeleteGameResponse)(nil),         // 10: weewar.v1.DeleteGameResponse
	(*GetGamesRequest)(nil),            // 11: weewar.v1.GetGamesRequest
	(*GetGamesResponse)(nil),           // 12: weewar.v1.GetGamesResponse
	(*CreateGameRequest)(nil),          // 13: weewar.v1.CreateGameRequest
	(*CreateGameResponse)(nil),         // 14: weewar.v1.CreateGameResponse
	(*ProcessMovesRequest)(nil),        // 15: weewar.v1.ProcessMovesRequest
	(*ProcessMovesResponse)(nil),       // 16: weewar.v1.ProcessMovesResponse
	(*GetMovementOptionsRequest)(nil),  // 17: weewar.v1.GetMovementOptionsRequest
	(*GetMovementOptionsResponse)(nil), // 18: weewar.v1.GetMovementOptionsResponse
	(*MovementOption)(nil),             // 19: weewar.v1.MovementOption
	(*GetAttackOptionsRequest)(nil),    // 20: weewar.v1.GetAttackOptionsRequest
	(*GetAttackOptionsResponse)(nil),   // 21: weewar.v1.GetAttackOptionsResponse
	(*AttackOption)(nil),               // 22: weewar.v1.AttackOption
	(*GetTileInfoRequest)(nil),         // 23: weewar.v1.GetTileInfoRequest
	(*GetTileInfoResponse)(nil),        // 24: weewar.v1.GetTileInfoResponse
	(*TileInfo)(nil),                   // 25: weewar.v1.TileInfo
	(*UnitInfo)(nil),                   // 26: weewar.v1.UnitInfo
	(*BuildingInfo)(nil),               // 27: weewar.v1.BuildingInfo
	(*GetTerrainStatsRequest)(nil),     // 28: weewar.v1.GetTerrainStatsRequest
	(*GetTerrainStatsResponse)(nil),    // 29: weewar.v1.GetTerrainStatsResponse
	(*TerrainStats)(nil),               // 30: weewar.v1.TerrainStats
	(*CanSelectUnitRequest)(nil),       // 31: weewar.v1.CanSelectUnitRequest
	(*CanSelectUnitResponse)(nil),      // 32: weewar.v1.CanSelectUnitResponse
	(*CreateGameFromMapRequest)(nil),   // 33: weewar.v1.CreateGameFromMapRequest
	(*CreateGameFromMapResponse)(nil),  // 34: weewar.v1.CreateGameFromMapResponse
	nil,                                // 35: weewar.v1.GetGamesResponse.GamesEntry
	nil,                                // 36: weewar.v1.CreateGameResponse.FieldErrorsEntry
	(*Pagination)(nil),                 // 37: weewar.v1.Pagination
	(*Game)(nil),                       // 38: weewar.v1.Game
	(*PaginationResponse)(nil),         // 39: weewar.v1.PaginationResponse
	(*fieldmaskpb.FieldMask)(nil),      // 40: google.protobuf.FieldMask
	(*GameMove)(nil),                   // 41: weewar.v1.GameMove
	(*GameMoveResult)(nil),             // 42: weewar.v1.GameMoveResult
	(*WorldChange)(nil),                // 43: weewar.v1.WorldChange
	(*GamePlayer)(nil),                 // 44: weewar.v1.GamePlayer
	(*GameSettings)(nil),               // 45: weewar.v1.GameSettings
	(*World)(nil),                      // 46: weewar.v1.World
}
var file_weewar_v1_games_proto_depIdxs = []int32{
	37, // 0: weewar.v1.ListGamesRequest.pagination:type_name -> weewar.v1.Pagination
	38, // 1: weewar.v1.ListGamesResponse.items:type_name -> weewar.v1.Game
	39, // 2: weewar.v1.ListGamesResponse.pagination:type_name -> weewar.v1.PaginationResponse
	38, // 3: weewar.v1.GetGameResponse.game:type_name -> weewar.v1.Game
	38, // 4: weewar.v1.UpdateGameRequest.game:type_name -> weewar.v1.Game
	40, // 5: weewar.v1.UpdateGameRequest.update_mask:type_name -> google.protobuf.FieldMask
	38, // 6: weewar.v1.UpdateGameResponse.game:type_name -> weewar.v1.Game
	35, // 7: weewar.v1.GetGamesResponse.games:type_name -> weewar.v1.GetGamesResponse.GamesEntry
	38, // 8: weewar.v1.CreateGameRequest.game:type_name -> weewar.v1.Game
	38, // 9: weewar.v1.CreateGameResponse.game:type_name -> weewar.v1.Game
	36, // 10: weewar.v1.CreateGameResponse.field_errors:type_name -> weewar.v1.CreateGameResponse.FieldErrorsEntry
	41, // 11: weewar.v1.ProcessMovesRequest.moves:type_name -> weewar.v1.GameMove
	42, // 12: weewar.v1.ProcessMovesResponse.move_results:type_name -> weewar.v1.GameMoveResult
	43, // 13: weewar.v1.ProcessMovesResponse.changes:type_name -> weewar.v1.WorldChange
	19, // 14: weewar.v1.GetMovementOptionsResponse.options:type_name -> weewar.v1.MovementOption
	22, // 15: weewar.v1.GetAttackOptionsResponse.options:type_name -> weewar.v1.AttackOption
	25, // 16: weewar.v1.GetTileInfoResponse.tile:type_name -> weewar.v1.TileInfo
	26, // 17: weewar.v1.TileInfo.unit:type_name -> weewar.v1.UnitInfo
	27, // 18: weewar.v1.TileInfo.building:type_name -> weewar.v1.BuildingInfo
	30, // 19: weewar.v1.GetTerrainStatsResponse.stats:type_name -> weewar.v1.TerrainStats
	44, // 20: weewar.v1.CreateGameFromMapRequest.players:type_name -> weewar.v1.GamePlayer
	45, // 21: weewar.v1.CreateGameFromMapRequest.settings:type_name -> weewar.v1.GameSettings
	38, // 22: weewar.v1.CreateGameFromMapResponse.game:type_name -> weewar.v1.Game
	46, // 23: weewar.v1.CreateGameFromMapResponse.initial_world:type_name -> weewar.v1.World
	38, // 24: weewar.v1.GetGamesResponse.GamesEntry.value:type_name -> weewar.v1.Game
	13, // 25: weewar.v1.GamesService.CreateGame:input_type -> weewar.v1.CreateGameRequest
	11, // 26: weewar.v1.GamesService.GetGames:input_type -> weewar.v1.GetGamesRequest
	1,  // 27: weewar.v1.GamesService.ListGames:input_type -> weewar.v1.ListGamesRequest
	3,  // 28: weewar.v1.GamesService.GetGame:input_type -> weewar.v1.GetGameRequest
	9,  // 29: weewar.v1.GamesService.DeleteGame:input_type -> weewar.v1.DeleteGameRequest
	7,  // 30: weewar.v1.GamesService.UpdateGame:input_type -> weewar.v1.UpdateGameRequest
	15, // 31: weewar.v1.GamesService.ProcessMoves:input_type -> weewar.v1.ProcessMovesRequest
	17, // 32: weewar.v1.GamesService.GetMovementOptions:input_type -> weewar.v1.GetMovementOptionsRequest
	20, // 33: weewar.v1.GamesService.GetAttackOptions:input_type -> weewar.v1.GetAttackOptionsRequest
	23, // 34: weewar.v1.GamesService.GetTileInfo:input_type -> weewar.v1.GetTileInfoRequest
	28, // 35: weewar.v1.GamesService.GetTerrainStats:input_type -> weewar.v1.GetTerrainStatsRequest
	31, // 36: weewar.v1.GamesService.CanSelectUnit:input_type -> weewar.v1.CanSelectUnitRequest
	33, // 37: weewar.v1.GamesService.CreateGameFromMap:input_type -> weewar.v1.CreateGameFromMapRequest
	14, // 38: weewar.v1.GamesService.CreateGame:output_type -> weewar.v1.CreateGameResponse
	12, // 39: weewar.v1.GamesService.GetGames:output_type -> weewar.v1.GetGamesResponse
	2,  // 40: weewar.v1.GamesService.ListGames:output_type -> weewar.v1.ListGamesResponse
	4,  // 41: weewar.v1.GamesService.GetGame:output_type -> weewar.v1.GetGameResponse
	10, // 42: weewar.v1.GamesService.DeleteGame:output_type -> weewar.v1.DeleteGameResponse
	8,  // 43: weewar.v1.GamesService.UpdateGame:output_type -> weewar.v1.UpdateGameResponse
	16, // 44: weewar.v1.GamesService.ProcessMoves:output_type -> weewar.v1.ProcessMovesResponse
	18, // 45: weewar.v1.GamesService.GetMovementOptions:output_type -> weewar.v1.GetMovementOptionsResponse
	21, // 46: weewar.v1.GamesService.GetAttackOptions:output_type -> weewar.v1.GetAttackOptionsResponse
	24, // 47: weewar.v1.GamesService.GetTileInfo:output_type -> weewar.v1.GetTileInfoResponse
	29, // 48: weewar.v1.GamesService.GetTerrainStats:output_type -> weewar.v1.GetTerrainStatsResponse
	32, // 49: weewar.v1.GamesService.CanSelectUnit:output_type -> weewar.v1.CanSelectUnitResponse
	34, // 50: weewar.v1.GamesService.CreateGameFromMap:output_type -> weewar.v1.CreateGameFromMapResponse
	38, // [38:51] is the sub-list for method output_type
	25, // [25:38] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_weewar_v1_games_proto_init() }
func file_weewar_v1_games_proto_init() {
	if File_weewar_v1_games_proto != nil {
		return
	}
	file_weewar_v1_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_weewar_v1_games_proto_rawDesc), len(file_weewar_v1_games_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weewar_v1_games_proto_goTypes,
		DependencyIndexes: file_weewar_v1_games_proto_depIdxs,
		MessageInfos:      file_weewar_v1_games_proto_msgTypes,
	}.Build()
	File_weewar_v1_games_proto = out.File
	file_weewar_v1_games_proto_goTypes = nil
	file_weewar_v1_games_proto_depIdxs = nil
}
