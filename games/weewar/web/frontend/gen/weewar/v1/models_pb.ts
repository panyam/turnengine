// protos/apptemplate/v1/models.proto

// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file weewar/v1/models.proto (package weewar.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file weewar/v1/models.proto.
 */
export const file_weewar_v1_models: GenFile = /*@__PURE__*/
  fileDesc("ChZ3ZWV3YXIvdjEvbW9kZWxzLnByb3RvEgl3ZWV3YXIudjEiRgoKUGFnaW5hdGlvbhIQCghwYWdlX2tleRgBIAEoCRITCgtwYWdlX29mZnNldBgCIAEoBRIRCglwYWdlX3NpemUYAyABKAUibgoSUGFnaW5hdGlvblJlc3BvbnNlEhUKDW5leHRfcGFnZV9rZXkYAiABKAkSGAoQbmV4dF9wYWdlX29mZnNldBgDIAEoBRIQCghoYXNfbW9yZRgEIAEoCBIVCg10b3RhbF9yZXN1bHRzGAUgASgFIsoBCgRHYW1lEi4KCmNyZWF0ZWRfYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgoKAmlkGAMgASgJEgwKBG5hbWUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSDAoEdGFncxgGIAMoCRIRCglpbWFnZV91cmwYByABKAkSEgoKZGlmZmljdWx0eRgIIAEoCSLJAQoDTWFwEi4KCmNyZWF0ZWRfYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgoKAmlkGAMgASgJEgwKBG5hbWUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSDAoEdGFncxgGIAMoCRIRCglpbWFnZV91cmwYByABKAkSEgoKZGlmZmljdWx0eRgIIAEoCSLKAQoEVXNlchIuCgpjcmVhdGVkX2F0GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIKCgJpZBgDIAEoCRIMCgRuYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEgwKBHRhZ3MYBiADKAkSEQoJaW1hZ2VfdXJsGAcgASgJEhIKCmRpZmZpY3VsdHkYCCABKAlCnQEKDWNvbS53ZWV3YXIudjFCC01vZGVsc1Byb3RvUAFaOmdpdGh1Yi5jb20vcGFueWFtL3R1cm5lbmdpbmUvZ2FtZXMvd2Vld2FyL2dlbi9nby93ZWV3YXIvdjGiAgNXWFiqAglXZWV3YXIuVjHKAglXZWV3YXJcVjHiAhVXZWV3YXJcVjFcR1BCTWV0YWRhdGHqAgpXZWV3YXI6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message weewar.v1.Pagination
 */
export type Pagination = Message<"weewar.v1.Pagination"> & {
  /**
   * *
   * Instead of an offset an abstract  "page" key is provided that offers
   * an opaque "pointer" into some offset in a result set.
   *
   * @generated from field: string page_key = 1;
   */
  pageKey: string;

  /**
   * *
   * If a pagekey is not supported we can also support a direct integer offset
   * for cases where it makes sense.
   *
   * @generated from field: int32 page_offset = 2;
   */
  pageOffset: number;

  /**
   * *
   * Number of results to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message weewar.v1.Pagination.
 * Use `create(PaginationSchema)` to create a new message.
 */
export const PaginationSchema: GenMessage<Pagination> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 0);

/**
 * @generated from message weewar.v1.PaginationResponse
 */
export type PaginationResponse = Message<"weewar.v1.PaginationResponse"> & {
  /**
   * *
   * The key/pointer string that subsequent List requests should pass to
   * continue the pagination.
   *
   * @generated from field: string next_page_key = 2;
   */
  nextPageKey: string;

  /**
   * *
   * Also support an integer offset if possible
   *
   * @generated from field: int32 next_page_offset = 3;
   */
  nextPageOffset: number;

  /**
   * *
   * Whether theere are more results.
   *
   * @generated from field: bool has_more = 4;
   */
  hasMore: boolean;

  /**
   * *
   * Total number of results.
   *
   * @generated from field: int32 total_results = 5;
   */
  totalResults: number;
};

/**
 * Describes the message weewar.v1.PaginationResponse.
 * Use `create(PaginationResponseSchema)` to create a new message.
 */
export const PaginationResponseSchema: GenMessage<PaginationResponse> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 1);

/**
 * @generated from message weewar.v1.Game
 */
export type Game = Message<"weewar.v1.Game"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the game
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Description if game has a description
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 7;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 8;
   */
  difficulty: string;
};

/**
 * Describes the message weewar.v1.Game.
 * Use `create(GameSchema)` to create a new message.
 */
export const GameSchema: GenMessage<Game> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 2);

/**
 * @generated from message weewar.v1.Map
 */
export type Map = Message<"weewar.v1.Map"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the map
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Description if map has a description
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 7;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 8;
   */
  difficulty: string;
};

/**
 * Describes the message weewar.v1.Map.
 * Use `create(MapSchema)` to create a new message.
 */
export const MapSchema: GenMessage<Map> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 3);

/**
 * @generated from message weewar.v1.User
 */
export type User = Message<"weewar.v1.User"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the user
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Description if user has a description
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 7;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 8;
   */
  difficulty: string;
};

/**
 * Describes the message weewar.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 4);

