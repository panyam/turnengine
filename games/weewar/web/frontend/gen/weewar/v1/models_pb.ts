// protos/apptemplate/v1/models.proto

// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file weewar/v1/models.proto (package weewar.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file weewar/v1/models.proto.
 */
export const file_weewar_v1_models: GenFile = /*@__PURE__*/
  fileDesc("ChZ3ZWV3YXIvdjEvbW9kZWxzLnByb3RvEgl3ZWV3YXIudjEiRgoKUGFnaW5hdGlvbhIQCghwYWdlX2tleRgBIAEoCRITCgtwYWdlX29mZnNldBgCIAEoBRIRCglwYWdlX3NpemUYAyABKAUibgoSUGFnaW5hdGlvblJlc3BvbnNlEhUKDW5leHRfcGFnZV9rZXkYAiABKAkSGAoQbmV4dF9wYWdlX29mZnNldBgDIAEoBRIQCghoYXNfbW9yZRgEIAEoCBIVCg10b3RhbF9yZXN1bHRzGAUgASgFIp4CCgRHYW1lEi4KCmNyZWF0ZWRfYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgoKAmlkGAMgASgJEhIKCmNyZWF0b3JfaWQYBCABKAkSEAoId29ybGRfaWQYBSABKAkSDAoEbmFtZRgGIAEoCRITCgtkZXNjcmlwdGlvbhgHIAEoCRIMCgR0YWdzGAggAygJEhEKCWltYWdlX3VybBgJIAEoCRISCgpkaWZmaWN1bHR5GAogASgJEiwKBmNvbmZpZxgLIAEoCzIcLndlZXdhci52MS5HYW1lQ29uZmlndXJhdGlvbiJmChFHYW1lQ29uZmlndXJhdGlvbhImCgdwbGF5ZXJzGAEgAygLMhUud2Vld2FyLnYxLkdhbWVQbGF5ZXISKQoIc2V0dGluZ3MYAiABKAsyFy53ZWV3YXIudjEuR2FtZVNldHRpbmdzIlQKCkdhbWVQbGF5ZXISEQoJcGxheWVyX2lkGAEgASgFEhMKC3BsYXllcl90eXBlGAIgASgJEg0KBWNvbG9yGAMgASgJEg8KB3RlYW1faWQYBCABKAUiZAoMR2FtZVNldHRpbmdzEhUKDWFsbG93ZWRfdW5pdHMYASADKAUSFwoPdHVybl90aW1lX2xpbWl0GAIgASgFEhEKCXRlYW1fbW9kZRgDIAEoCRIRCgltYXhfdHVybnMYBCABKAUinwIKBVdvcmxkEi4KCmNyZWF0ZWRfYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgoKAmlkGAMgASgJEhIKCmNyZWF0b3JfaWQYBCABKAkSDAoEbmFtZRgFIAEoCRITCgtkZXNjcmlwdGlvbhgGIAEoCRIMCgR0YWdzGAcgAygJEhEKCWltYWdlX3VybBgIIAEoCRISCgpkaWZmaWN1bHR5GAkgASgJEh4KBXRpbGVzGAsgAygLMg8ud2Vld2FyLnYxLlRpbGUSHgoFdW5pdHMYDCADKAsyDy53ZWV3YXIudjEuVW5pdCI/CgRUaWxlEgkKAXEYASABKAUSCQoBchgCIAEoBRIRCgl0aWxlX3R5cGUYAyABKAUSDgoGcGxheWVyGAQgASgFIj8KBFVuaXQSCQoBcRgBIAEoBRIJCgFyGAIgASgFEg4KBnBsYXllchgDIAEoBRIRCgl1bml0X3R5cGUYBCABKAUiygEKBFVzZXISLgoKY3JlYXRlZF9hdBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASCgoCaWQYAyABKAkSDAoEbmFtZRgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCRIMCgR0YWdzGAYgAygJEhEKCWltYWdlX3VybBgHIAEoCRISCgpkaWZmaWN1bHR5GAggASgJQp0BCg1jb20ud2Vld2FyLnYxQgtNb2RlbHNQcm90b1ABWjpnaXRodWIuY29tL3BhbnlhbS90dXJuZW5naW5lL2dhbWVzL3dlZXdhci9nZW4vZ28vd2Vld2FyL3YxogIDV1hYqgIJV2Vld2FyLlYxygIJV2Vld2FyXFYx4gIVV2Vld2FyXFYxXEdQQk1ldGFkYXRh6gIKV2Vld2FyOjpWMWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * @generated from message weewar.v1.Pagination
 */
export type Pagination = Message<"weewar.v1.Pagination"> & {
  /**
   * *
   * Instead of an offset an abstract  "page" key is provided that offers
   * an opaque "pointer" into some offset in a result set.
   *
   * @generated from field: string page_key = 1;
   */
  pageKey: string;

  /**
   * *
   * If a pagekey is not supported we can also support a direct integer offset
   * for cases where it makes sense.
   *
   * @generated from field: int32 page_offset = 2;
   */
  pageOffset: number;

  /**
   * *
   * Number of results to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message weewar.v1.Pagination.
 * Use `create(PaginationSchema)` to create a new message.
 */
export const PaginationSchema: GenMessage<Pagination> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 0);

/**
 * @generated from message weewar.v1.PaginationResponse
 */
export type PaginationResponse = Message<"weewar.v1.PaginationResponse"> & {
  /**
   * *
   * The key/pointer string that subsequent List requests should pass to
   * continue the pagination.
   *
   * @generated from field: string next_page_key = 2;
   */
  nextPageKey: string;

  /**
   * *
   * Also support an integer offset if possible
   *
   * @generated from field: int32 next_page_offset = 3;
   */
  nextPageOffset: number;

  /**
   * *
   * Whether theere are more results.
   *
   * @generated from field: bool has_more = 4;
   */
  hasMore: boolean;

  /**
   * *
   * Total number of results.
   *
   * @generated from field: int32 total_results = 5;
   */
  totalResults: number;
};

/**
 * Describes the message weewar.v1.PaginationResponse.
 * Use `create(PaginationResponseSchema)` to create a new message.
 */
export const PaginationResponseSchema: GenMessage<PaginationResponse> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 1);

/**
 * @generated from message weewar.v1.Game
 */
export type Game = Message<"weewar.v1.Game"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the game
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * User who started/created the game
   *
   * @generated from field: string creator_id = 4;
   */
  creatorId: string;

  /**
   * The world this game was created from
   *
   * @generated from field: string world_id = 5;
   */
  worldId: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Description if game has a description
   *
   * @generated from field: string description = 7;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 9;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 10;
   */
  difficulty: string;

  /**
   * Game configuration
   *
   * @generated from field: weewar.v1.GameConfiguration config = 11;
   */
  config?: GameConfiguration;
};

/**
 * Describes the message weewar.v1.Game.
 * Use `create(GameSchema)` to create a new message.
 */
export const GameSchema: GenMessage<Game> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 2);

/**
 * @generated from message weewar.v1.GameConfiguration
 */
export type GameConfiguration = Message<"weewar.v1.GameConfiguration"> & {
  /**
   * Player configuration
   *
   * @generated from field: repeated weewar.v1.GamePlayer players = 1;
   */
  players: GamePlayer[];

  /**
   * Game settings
   *
   * @generated from field: weewar.v1.GameSettings settings = 2;
   */
  settings?: GameSettings;
};

/**
 * Describes the message weewar.v1.GameConfiguration.
 * Use `create(GameConfigurationSchema)` to create a new message.
 */
export const GameConfigurationSchema: GenMessage<GameConfiguration> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 3);

/**
 * @generated from message weewar.v1.GamePlayer
 */
export type GamePlayer = Message<"weewar.v1.GamePlayer"> & {
  /**
   * Player ID (1-based)
   *
   * @generated from field: int32 player_id = 1;
   */
  playerId: number;

  /**
   * Player type
   *
   * "human", "ai", "open"
   *
   * @generated from field: string player_type = 2;
   */
  playerType: string;

  /**
   * Player color
   *
   * @generated from field: string color = 3;
   */
  color: string;

  /**
   * Team ID (0 = no team, 1+ = team number)
   *
   * @generated from field: int32 team_id = 4;
   */
  teamId: number;
};

/**
 * Describes the message weewar.v1.GamePlayer.
 * Use `create(GamePlayerSchema)` to create a new message.
 */
export const GamePlayerSchema: GenMessage<GamePlayer> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 4);

/**
 * @generated from message weewar.v1.GameSettings
 */
export type GameSettings = Message<"weewar.v1.GameSettings"> & {
  /**
   * List of allowed unit type IDs
   *
   * @generated from field: repeated int32 allowed_units = 1;
   */
  allowedUnits: number[];

  /**
   * Turn time limit in seconds (0 = no limit)
   *
   * @generated from field: int32 turn_time_limit = 2;
   */
  turnTimeLimit: number;

  /**
   * Team mode
   *
   * "ffa" or "teams"
   *
   * @generated from field: string team_mode = 3;
   */
  teamMode: string;

  /**
   * Maximum number of turns (0 = unlimited)
   *
   * @generated from field: int32 max_turns = 4;
   */
  maxTurns: number;
};

/**
 * Describes the message weewar.v1.GameSettings.
 * Use `create(GameSettingsSchema)` to create a new message.
 */
export const GameSettingsSchema: GenMessage<GameSettings> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 5);

/**
 * @generated from message weewar.v1.World
 */
export type World = Message<"weewar.v1.World"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the world
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * User that created the world
   *
   * @generated from field: string creator_id = 4;
   */
  creatorId: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * Description if world has a description
   *
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 7;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 8;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 9;
   */
  difficulty: string;

  /**
   * JSON-fied tile data about what units and terrains are at each location
   *
   * @generated from field: repeated weewar.v1.Tile tiles = 11;
   */
  tiles: Tile[];

  /**
   * All units on the world and who they belong to
   *
   * @generated from field: repeated weewar.v1.Unit units = 12;
   */
  units: Unit[];
};

/**
 * Describes the message weewar.v1.World.
 * Use `create(WorldSchema)` to create a new message.
 */
export const WorldSchema: GenMessage<World> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 6);

/**
 * @generated from message weewar.v1.Tile
 */
export type Tile = Message<"weewar.v1.Tile"> & {
  /**
   * Q and R in Cubed coordinates
   *
   * @generated from field: int32 q = 1;
   */
  q: number;

  /**
   * @generated from field: int32 r = 2;
   */
  r: number;

  /**
   * Tile type
   *
   * @generated from field: int32 tile_type = 3;
   */
  tileType: number;

  /**
   * Whether the tile itself belongs to a player
   *
   * @generated from field: int32 player = 4;
   */
  player: number;
};

/**
 * Describes the message weewar.v1.Tile.
 * Use `create(TileSchema)` to create a new message.
 */
export const TileSchema: GenMessage<Tile> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 7);

/**
 * @generated from message weewar.v1.Unit
 */
export type Unit = Message<"weewar.v1.Unit"> & {
  /**
   * Q and R in Cubed coordinates
   *
   * @generated from field: int32 q = 1;
   */
  q: number;

  /**
   * @generated from field: int32 r = 2;
   */
  r: number;

  /**
   * @generated from field: int32 player = 3;
   */
  player: number;

  /**
   * @generated from field: int32 unit_type = 4;
   */
  unitType: number;
};

/**
 * Describes the message weewar.v1.Unit.
 * Use `create(UnitSchema)` to create a new message.
 */
export const UnitSchema: GenMessage<Unit> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 8);

/**
 * @generated from message weewar.v1.User
 */
export type User = Message<"weewar.v1.User"> & {
  /**
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * Unique ID for the user
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Name if items have names
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Description if user has a description
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Some tags
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * A possible image url
   *
   * @generated from field: string image_url = 7;
   */
  imageUrl: string;

  /**
   * Difficulty - example attribute
   *
   * @generated from field: string difficulty = 8;
   */
  difficulty: string;
};

/**
 * Describes the message weewar.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_weewar_v1_models, 9);

