{"version":3,"file":"frontend_components_Modal_ts-frontend_components_ThemeManager_ts-frontend_components_ToastMan-fef01a.e1f9efd4f51c5f6620b3.js","mappings":"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","sources":["webpack://weewar/./frontend/components/Modal.ts","webpack://weewar/./frontend/components/TemplateLoader.ts","webpack://weewar/./frontend/components/ThemeManager.ts","webpack://weewar/./frontend/components/ToastManager.ts"],"sourcesContent":["// web/views/components/Modal.ts\nimport { TemplateLoader } from './TemplateLoader'; // Import TemplateLoader\n\n/**\n * Modal manager for the application\n * Handles showing and hiding modals with different content\n */\nexport class Modal {\n  private static instance: Modal | null = null;\n\n  // Modal DOM elements\n  private modalContainer: HTMLDivElement\n  private modalBackdrop: HTMLElement | null;\n  private modalPanel: HTMLElement | null;\n  private modalContent: HTMLElement | null;\n  private closeButton: HTMLElement | null;\n\n  private templateLoader: TemplateLoader;\n\n  // Current modal data - including optional callbacks\n  private currentTemplateId: string | null = null;\n  private currentData: any = null;\n  private onSubmitCallback: ((modalData: any) => void) | null = null; // Store the callback\n  private onApplyCallback: ((modalData: any) => void) | null = null; // Store the Apply callback\n\n\n  /**\n   * Private constructor for singleton pattern\n   */\n  private constructor() {\n    // Get modal elements\n    this.modalContainer = document.getElementById('modal-container') as HTMLDivElement;\n    this.modalBackdrop = document.getElementById('modal-backdrop');\n    this.modalPanel = document.getElementById('modal-panel');\n    this.modalContent = document.getElementById('modal-content');\n    this.closeButton = document.getElementById('modal-close');\n\n    this.templateLoader = new TemplateLoader();\n\n    this.bindEvents();\n  }\n\n  /**\n   * Get the Modal instance (singleton)\n   */\n  public static getInstance(): Modal {\n    if (!Modal.instance) {\n      Modal.instance = new Modal();\n    }\n    return Modal.instance;\n  }\n\n  /**\n   * Bind event listeners for modal interactions\n   */\n  private bindEvents(): void {\n    // Close button click\n    if (this.closeButton) {\n      this.closeButton.addEventListener('click', () => this.hide());\n    }\n\n    // Click on backdrop to close\n    if (this.modalBackdrop) {\n      this.modalBackdrop.addEventListener('click', (e) => {\n        // Only close if clicking directly on the backdrop\n        if (e.target === this.modalBackdrop) {\n          this.hide();\n        }\n      });\n    }\n\n    // Listen for Escape key\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.isVisible()) {\n        this.hide();\n      }\n    });\n\n    // --- Event Delegation for Modal Actions ---\n    if (this.modalPanel) { // Listen on a persistent parent element\n        this.modalPanel.addEventListener('click', (e: MouseEvent) => {\n            const target = e.target as HTMLElement;\n\n            // Handle generic close/cancel buttons\n            const closeButton = target.closest('button[id$=\"-cancel\"], button[id$=\"-close\"]');\n            if (closeButton) {\n                console.log(`Modal cancel/close button clicked: ${closeButton.id}`);\n                this.hide();\n                return; // Stop further processing\n            }\n\n            // Handle specific actions like submit\n            const actionButton = target.closest('button[data-modal-action]');\n            if (actionButton) {\n                const action = actionButton.getAttribute('data-modal-action');\n                console.log(`Modal action button clicked: ${action}`);\n\n                if (action === 'submit' && this.onSubmitCallback) {\n                    this.onSubmitCallback(this.currentData); // Call the stored callback\n                } else if (action === 'apply' && this.onApplyCallback) {\n                    this.onApplyCallback(this.currentData); // Call the Apply callback\n                    this.hide(); // Typically hide after applying\n                }\n                // Add more actions (e.g., 'apply', 'revise') later if needed\n            }\n        });\n    }\n  }\n\n  /**\n   * Check if the modal is currently visible\n   */\n  public isVisible(): boolean {\n    return this.modalContainer ? !this.modalContainer.classList.contains('hidden') : false;\n  }\n\n  /**\n   * Show a modal with content from the specified template ID.\n   * Uses TemplateLoader to get the content element.\n   * @param templateId ID used in `data-template-id` attribute in TemplateRegistry.html\n   * @param data Optional data to pass to the modal. Can include callbacks like `onSubmit`.\n   * @returns The root HTMLElement of the loaded content, or null if failed.\n   */\n  public show(templateId: string, data: any = null): HTMLElement | null {\n    if (!this.modalContainer || !this.modalContent) {\n        console.error(\"Modal container or content area not found.\");\n        return null;\n    }\n\n    // Use TemplateLoader to get the content element\n    // Load content directly into the modal content area\n    const success = this.templateLoader.loadInto(templateId, this.modalContent);\n    if (!success) {\n         // Error message is already placed into modalContent by loadInto on failure\n         // Ensure modal is still visible\n         this.modalContainer.classList.remove('hidden');\n         setTimeout(() => this.modalContainer.classList.add('modal-active'), 10);\n        return null; // Indicate failure\n    }\n\n    // Store current modal info\n    this.currentTemplateId = templateId;\n    this.currentData = data || {}; // Ensure data is an object\n    this.onSubmitCallback = data?.onSubmit || null; // Store the submit callback\n    this.onApplyCallback = data?.onApply || null; // Store the apply callback\n\n    // Set data attributes for non-function data\n    if (data) {\n      Object.entries(data).forEach(([key, value]) => {\n        if (key !== 'onSubmit' && (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean')) {\n          if (this.modalContent) this.modalContent.dataset[key] = String(value);\n        }\n      });\n    }\n\n    // Show modal container\n    this.modalContainer.classList.remove('hidden');\n\n    // Trigger animations if needed (add active class after a tick)\n    setTimeout(() => {\n      this.modalContainer.classList.add('modal-active');\n    }, 10); // Small delay ensures transition applies correctly\n\n    const firstElement = this.modalContent//?.firstElementChild as HTMLElement | null;\n    return firstElement;\n  }\n\n  /**\n   * Hide the modal\n   */\n  public hide(): Promise<void> {\n    return new Promise((resolve) => {\n        if (!this.modalContainer) return;\n\n        // Remove active class first (for animations)\n        this.modalContainer.classList.remove('modal-active');\n\n        // Hide after a short delay\n        setTimeout(() => {\n          this.modalContainer.classList.add('hidden');\n\n          // Clear current modal info\n          this.currentTemplateId = null;\n          this.currentData = null;\n          this.onSubmitCallback = null; // Clear callback\n          this.onApplyCallback = null; // Clear apply callback\n          if(this.modalContent) this.modalContent.innerHTML = ''; // Clear content\n          resolve();\n        }, 200); // Match typical transition duration\n    });\n  }\n\n  /**\n   * Get the current modal content element\n   */\n  public getContentElement(): HTMLElement | null {\n    return this.modalContent;\n  }\n\n  /**\n   * Get the current template ID\n   */\n  public getCurrentTemplate(): string | null {\n    return this.currentTemplateId;\n  }\n\n  /**\n   * Get the current modal data\n   */\n  public getCurrentData(): any {\n    return this.currentData;\n  }\n\n  /**\n   * Update modal data (excluding callbacks for now)\n   */\n  public updateData(newData: any): void {\n    this.currentData = { ...this.currentData, ...newData };\n\n    // Update data attributes for non-function data\n    if (this.modalContent && newData) {\n      Object.entries(newData).forEach(([key, value]) => { // Exclude callbacks when setting data attributes\n         if (key !== 'onSubmit' && (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean')) {\n          if (this.modalContent) this.modalContent.dataset[key] = String(value);\n        }\n      });\n    }\n  }\n\n  /**\n   * Initialize the modal component\n   */\n  public static init(): Modal {\n    return Modal.getInstance();\n  }\n}\n","\n// Helper to manage our templates\nexport class TemplateLoader {\n  constructor(public registryName = \"template-registry\") {\n  }\n\n\n  /**\n   * Finds the specified template wrapper element in the registry.\n   * @param templateId The data-template-id of the wrapper element.\n   * @returns The wrapper HTMLElement or null if not found.\n   */\n  private _findTemplateWrapper(templateId: string): HTMLElement | null {\n      const templateRegistry = document.getElementById(this.registryName);\n      if (!templateRegistry) {\n          console.error(`Template registry '#${this.registryName}' not found!`);\n          return null;\n      }\n      const templateWrapper = templateRegistry.querySelector<HTMLElement>(`[data-template-id=\"${templateId}\"]`);\n      if (!templateWrapper) {\n          console.error(`Template with ID \"${templateId}\" not found in registry '#${this.registryName}'.`);\n          return null;\n      }\n      return templateWrapper;\n  }\n\n  /**\n   * Loads and returns the inner HTML of a template definition.\n   * @param templateId The data-template-id of the wrapper element.\n   * @returns The innerHTML content as string if it exists otherwise null.\n   */\n  loadHtml(templateId: string): string | null {\n    const templateWrapper = this._findTemplateWrapper(templateId);\n    if (!templateWrapper) {\n        return null;\n    }\n    return templateWrapper.innerHTML\n  }\n\n  /**\n   * Loads and clones the child elements of a template definition.\n   * @param templateId The data-template-id of the wrapper element.\n   * @returns An array of cloned HTMLElement children, or an empty array if not found or has no children.\n   */\n  load(templateId: string): HTMLElement[] {\n    const templateWrapper = this._findTemplateWrapper(templateId);\n    if (!templateWrapper) {\n        return [];\n    }\n\n    // Using hidden div: Clone the first child element which is the actual template root\n    const templateRootElement = templateWrapper.cloneNode(true) as HTMLElement | null;\n    if (!templateRootElement) {\n      console.error(`Template content is empty for: ${templateId}`);\n      return [];\n    }\n    // deep clone AND return th children\n    return Array.from(templateRootElement.children) as HTMLElement[];\n\n    // clond the children instead\n    // Clone each child element individually and return as an array\n    // const childElements = Array.from(templateWrapper.children) as HTMLElement[];\n    // return childElements.map(child => child.cloneNode(true) as HTMLElement);\n  }\n\n   /**\n   * Loads a template's content, clears the target element, and appends the cloned content into it.\n   * @param templateId The data-template-id of the wrapper element to load.\n   * @param targetElement The HTMLElement where the cloned content should be placed.\n   * @returns True if the operation was successful (template found and content appended, even if content was empty), false otherwise.\n   */\n  public loadInto(templateId: string, targetElement: HTMLElement | null): boolean {\n    if (!targetElement) {\n      console.error(`Cannot load template \"${templateId}\": Target element is null.`);\n      return false;\n    }\n\n    const templateWrapper = this._findTemplateWrapper(templateId);\n    if (!templateWrapper) {\n       // Error logged in _findTemplateWrapper\n       targetElement.innerHTML = `<div class=\"p-4 text-red-500\">Error loading template '${templateId}' (Not Found)</div>`; // Provide feedback in target\n       return false;\n    }\n\n    // Clear the target element first\n    targetElement.innerHTML = '';\n\n    // Clone and append children\n    const childElements = Array.from(templateWrapper.children) as HTMLElement[];\n    if (childElements.length === 0) {\n      console.warn(`Template \"${templateId}\" has no child elements to load.`);\n      // Still considered successful, just loaded nothing.\n    } else {\n      childElements.forEach(child => {\n        targetElement.appendChild(child.cloneNode(true) as HTMLElement);\n      });\n    }\n\n    return true; // Operation successful\n  }\n}\n","// components/theme.ts\n\n/**\n * Theme management for LeetCoach application\n */\nexport class ThemeManager {\n    // Theme options\n    static LIGHT = 'light';\n    static DARK = 'dark';\n    static SYSTEM = 'system';\n\n    // Icons for each theme state\n    static readonly LIGHT_ICON_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-full h-full\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\" /></svg>`; // Sun icon\n    static readonly DARK_ICON_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-full h-full\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z\" /></svg>`; // Moon icon\n    static readonly SYSTEM_ICON_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-full h-full\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25\" /></svg>`; // Computer icon\n\n    /**\n     * Initialize theme based on saved preference or system default\n     */\n    static initialize(): void {\n        const savedTheme = localStorage.getItem('theme');\n\n        if (savedTheme === ThemeManager.DARK ||\n            (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n            document.documentElement.classList.add('dark');\n        } else {\n            document.documentElement.classList.remove('dark');\n        }\n        // No need to update icon here, DetailPage will handle it on init\n    }\n\n    /**\n     * Set theme and save preference\n     */\n    static setTheme(theme: string): void {\n        if (theme === ThemeManager.SYSTEM) {\n            localStorage.removeItem('theme');\n            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                document.documentElement.classList.add('dark');\n            } else {\n                document.documentElement.classList.remove('dark');\n            }\n        } else if (theme === ThemeManager.DARK) {\n            localStorage.setItem('theme', ThemeManager.DARK);\n            document.documentElement.classList.add('dark');\n        } else { // LIGHT\n            localStorage.setItem('theme', ThemeManager.LIGHT);\n            document.documentElement.classList.remove('dark');\n        }\n        // Inform about potential TinyMCE redraw needed (optional, depends on how sensitive TinyMCE is)\n        // console.log(\"Theme set, TinyMCE might need skin update if active editors exist.\");\n    }\n\n    /**\n     * Get current theme setting (light, dark, or system)\n     */\n    static getCurrentThemeSetting(): string {\n        return localStorage.getItem('theme') || ThemeManager.SYSTEM;\n    }\n\n    /**\n     * Gets the *next* theme in the cycle: Light -> Dark -> System -> Light ...\n     */\n    static getNextTheme(currentSetting: string): string {\n        if (currentSetting === ThemeManager.LIGHT) {\n            return ThemeManager.DARK;\n        } else if (currentSetting === ThemeManager.DARK) {\n            return ThemeManager.SYSTEM;\n        } else { // SYSTEM or unknown goes to LIGHT\n            return ThemeManager.LIGHT;\n        }\n    }\n\n    /**\n     * Gets the appropriate SVG icon string for a given theme setting.\n     */\n    static getIconSVG(themeSetting: string): string {\n        switch (themeSetting) {\n            case ThemeManager.LIGHT: return ThemeManager.LIGHT_ICON_SVG;\n            case ThemeManager.DARK: return ThemeManager.DARK_ICON_SVG;\n            case ThemeManager.SYSTEM:\n            default: return ThemeManager.SYSTEM_ICON_SVG;\n        }\n    }\n\n    /**\n     * Gets a user-friendly label for the theme setting.\n     */\n    static getThemeLabel(themeSetting: string): string {\n        switch (themeSetting) {\n            case ThemeManager.LIGHT: return \"Light Mode\";\n            case ThemeManager.DARK: return \"Dark Mode\";\n            case ThemeManager.SYSTEM:\n            default: return \"System Default\";\n        }\n    }\n\n\n    /**\n     * Initialize the ThemeManager (no instance needed for static methods)\n     * We keep init() if other instance logic might be added later,\n     * but it doesn't return anything useful right now.\n     */\n    public static init(): void {\n        // Static initialization happens directly or via initialize()\n        // No instance is created or needed for these static methods.\n        ThemeManager.initialize();\n    }\n}\n\n// No need to call initialize here, DetailPage will handle it\n// document.addEventListener('DOMContentLoaded', () => {\n//     ThemeManager.initialize();\n// });\n","// components/ToastManager.ts\n\n/**\n * Toast types for styling\n */\ntype ToastType = 'success' | 'error' | 'info' | 'warning';\n\n/**\n * Manages toast notifications\n */\nexport class ToastManager {\n    private static instance: ToastManager | null = null;\n    private container: HTMLElement | null;\n    private template: HTMLElement | null;\n    private toasts: Map<string, HTMLElement> = new Map();\n    private counter: number = 0;\n\n    /**\n     * Private constructor for singleton pattern\n     */\n    private constructor() {\n        // this.container = document.querySelector('.fixed.bottom-4.left-4.z-50');\n        // Select the container using its ID from index.html\n        this.container = document.getElementById('toast-container');\n        this.template = document.getElementById('toast-template');\n    }\n\n    /**\n     * Get the ToastManager instance (singleton)\n     */\n    public static getInstance(): ToastManager {\n        if (!ToastManager.instance) {\n            ToastManager.instance = new ToastManager();\n        }\n        return ToastManager.instance;\n    }\n\n    /**\n     * Show a toast notification\n     * @param title Toast title\n     * @param message Toast message\n     * @param type Toast type for styling\n     * @param duration Duration in ms (default: 4000)\n     */\n    public showToast(title: string, message: string, type: ToastType = 'info', duration: number = 4000): string {\n        if (!this.container || !this.template) return '';\n\n        // Create a unique ID for this toast\n        const id = `toast-${Date.now()}-${this.counter++}`;\n\n        // Clone the template\n        const toast = this.template.cloneNode(true) as HTMLElement;\n        toast.id = id;\n        toast.classList.remove('hidden');\n\n        // Set content\n        const titleElement = toast.querySelector('.toast-title');\n        const messageElement = toast.querySelector('.toast-message');\n        if (titleElement) titleElement.textContent = title;\n        if (messageElement) messageElement.textContent = message;\n\n        // Set style based on type\n        const iconContainer = toast.querySelector('.flex-shrink-0');\n        if (iconContainer) {\n            // Clear existing icon\n            iconContainer.innerHTML = '';\n\n            // Add appropriate icon based on type\n            let icon: string;\n            let borderColor: string;\n            \n            switch (type) {\n                case 'success':\n                    icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-green-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" /></svg>';\n                    borderColor = 'border-green-500';\n                    break;\n                case 'error':\n                    icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-red-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" /></svg>';\n                    borderColor = 'border-red-500';\n                    break;\n                case 'warning':\n                    icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-yellow-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" /></svg>';\n                    borderColor = 'border-yellow-500';\n                    break;\n                case 'info':\n                default:\n                    icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-blue-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" /></svg>';\n                    borderColor = 'border-blue-500';\n                    break;\n            }\n\n            // Add icon\n            iconContainer.innerHTML = icon;\n\n            // Set border color\n            const borderElement = toast.querySelector('.border-l-4');\n            if (borderElement) {\n                borderElement.className = borderElement.className.replace(/border-[a-z]+-500/g, borderColor);\n            }\n        }\n\n        // Add close button handler\n        const closeButton = toast.querySelector('.toast-close');\n        if (closeButton) {\n            closeButton.addEventListener('click', () => {\n                this.hideToast(id);\n            });\n        }\n\n        // Add to container\n        this.container.appendChild(toast);\n        this.toasts.set(id, toast);\n\n        // Show toast with animation\n        setTimeout(() => {\n            toast.classList.remove('scale-95', 'opacity-0');\n            toast.classList.add('scale-100', 'opacity-100');\n        }, 10);\n\n        // Auto-hide after duration\n        if (duration > 0) {\n            setTimeout(() => {\n                this.hideToast(id);\n            }, duration);\n        }\n\n        return id;\n    }\n\n    /**\n     * Hide a toast notification\n     * @param id Toast ID\n     */\n    public hideToast(id: string): void {\n        const toast = this.toasts.get(id);\n        if (!toast) return;\n\n        // Hide with animation\n        toast.classList.remove('scale-100', 'opacity-100');\n        toast.classList.add('scale-95', 'opacity-0');\n\n        // Remove after animation\n        setTimeout(() => {\n            toast.remove();\n            this.toasts.delete(id);\n        }, 300);\n    }\n\n    /**\n     * Hide all toast notifications\n     */\n    public hideAllToasts(): void {\n        this.toasts.forEach((_, id) => {\n            this.hideToast(id);\n        });\n    }\n\n    /**\n     * Initialize the component\n     */\n    public static init(): ToastManager {\n        return ToastManager.getInstance();\n    }\n}\n"],"names":[],"sourceRoot":""}