{"version":3,"file":"MapEditorPage.e8d38424ba05de28778b.js","mappings":"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AC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC/C,IAAI,aAAa,EAAE,CAAC;AACxB,CAAC,CAAC,CAAC;;;;;;;UC32BH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,E;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,4G;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://weewar/webpack/universalModuleDefinition","webpack://weewar/./frontend/components/MapEditorPage.ts","webpack://weewar/webpack/bootstrap","webpack://weewar/webpack/runtime/chunk loaded","webpack://weewar/webpack/runtime/define property getters","webpack://weewar/webpack/runtime/hasOwnProperty shorthand","webpack://weewar/webpack/runtime/make namespace object","webpack://weewar/webpack/runtime/jsonp chunk loading","webpack://weewar/webpack/before-startup","webpack://weewar/webpack/startup","webpack://weewar/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"weewar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"weewar\"] = factory();\n\telse\n\t\troot[\"weewar\"] = root[\"weewar\"] || {}, root[\"weewar\"][\"MapEditorPage\"] = factory();\n})(this, () => {\nreturn ","import { ThemeManager } from './ThemeManager';\nimport { Modal } from './Modal';\nimport { ToastManager } from './ToastManager';\n\n/**\n * Map Editor page with WASM integration for hex-based map editing\n */\nclass MapEditorPage {\n    private themeManager: typeof ThemeManager | null = null;\n    private modal: Modal | null = null;\n    private toastManager: ToastManager | null = null;\n\n    private themeToggleButton: HTMLButtonElement | null = null;\n    private themeToggleIcon: HTMLElement | null = null;\n\n    private currentMapId: string | null = null;\n    private isNewMap: boolean = false;\n    private mapData: {\n        name: string;\n        width: number;\n        height: number;\n        tiles: { [key: string]: { tileType: number } };\n        map_units: any[];\n    } | null = null;\n    \n    // Editor state\n    private currentTerrain: number = 1; // Default to grass\n    private brushSize: number = 0; // Default to single hex\n    private editorCanvas: HTMLElement | null = null;\n    private mapCanvas: HTMLCanvasElement | null = null;\n    private canvasContext: CanvasRenderingContext2D | null = null;\n    private editorOutput: HTMLElement | null = null;\n\n    // WASM interface\n    private wasmModule: any = null;\n    private wasmInitialized: boolean = false;\n    private wasmWorld: any = null;\n    private wasmViewState: any = null;\n    private wasmCanvasRenderer: any = null;\n\n    constructor() {\n        this.initializeComponents();\n        this.bindEvents();\n        this.loadInitialState();\n        this.initializeWasm();\n    }\n\n    private initializeComponents(): void {\n        const mapIdInput = document.getElementById(\"mapIdInput\") as HTMLInputElement | null;\n        const isNewMapInput = document.getElementById(\"isNewMap\") as HTMLInputElement | null;\n        \n        this.currentMapId = mapIdInput?.value.trim() || null;\n        this.isNewMap = isNewMapInput?.value === \"true\";\n\n        ThemeManager.init();\n        this.modal = Modal.init();\n        this.toastManager = ToastManager.init();\n\n        this.themeToggleButton = document.getElementById('theme-toggle-button') as HTMLButtonElement;\n        this.themeToggleIcon = document.getElementById('theme-toggle-icon');\n        this.editorCanvas = document.getElementById('editor-canvas-container');\n        this.mapCanvas = document.getElementById('map-canvas') as HTMLCanvasElement;\n        this.editorOutput = document.getElementById('editor-output');\n        \n        // Initialize canvas context\n        if (this.mapCanvas) {\n            this.canvasContext = this.mapCanvas.getContext('2d');\n            this.initializeCanvas();\n        }\n\n        if (!this.themeToggleButton || !this.themeToggleIcon) {\n            console.warn(\"Theme toggle button or icon element not found in Header.\");\n        }\n\n        this.logToConsole('Map Editor initialized');\n    }\n\n    private bindEvents(): void {\n        // Theme toggle\n        if (this.themeToggleButton) {\n            this.themeToggleButton.addEventListener('click', this.handleThemeToggleClick.bind(this));\n        }\n\n        // Header buttons\n        const saveButton = document.getElementById('save-map-btn');\n        if (saveButton) {\n            saveButton.addEventListener('click', this.saveMap.bind(this));\n        }\n\n        const exportButton = document.getElementById('export-map-btn');\n        if (exportButton) {\n            exportButton.addEventListener('click', this.exportMap.bind(this));\n        }\n\n        // Utility buttons\n        const validateButton = document.getElementById('validate-map-btn');\n        if (validateButton) {\n            validateButton.addEventListener('click', this.validateMap.bind(this));\n        }\n\n        const clearConsoleButton = document.getElementById('clear-console-btn');\n        if (clearConsoleButton) {\n            clearConsoleButton.addEventListener('click', this.clearConsole.bind(this));\n        }\n\n        // Map management buttons\n        document.querySelectorAll('[data-action=\"create-new-map\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const target = e.target as HTMLElement;\n                const width = parseInt(target.dataset.width || '8');\n                const height = parseInt(target.dataset.height || '8');\n                this.createNewMap(width, height);\n            });\n        });\n\n        // Terrain palette buttons\n        document.querySelectorAll('.terrain-button').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const terrain = (e.target as HTMLElement).getAttribute('data-terrain');\n                if (terrain) {\n                    this.setBrushTerrain(parseInt(terrain));\n                }\n            });\n        });\n\n        // Brush size selector\n        const brushSizeSelect = document.getElementById('brush-size') as HTMLSelectElement;\n        if (brushSizeSelect) {\n            brushSizeSelect.addEventListener('change', (e) => {\n                this.setBrushSize(parseInt((e.target as HTMLSelectElement).value));\n            });\n        }\n\n        // Painting action buttons\n        document.querySelector('[data-action=\"paint-terrain\"]')?.addEventListener('click', () => {\n            this.paintTerrain();\n        });\n        document.querySelector('[data-action=\"flood-fill\"]')?.addEventListener('click', () => {\n            this.floodFill();\n        });\n        document.querySelector('[data-action=\"remove-terrain\"]')?.addEventListener('click', () => {\n            this.removeTerrain();\n        });\n\n        // History buttons\n        document.querySelector('[data-action=\"undo\"]')?.addEventListener('click', () => {\n            this.editorUndo();\n        });\n        document.querySelector('[data-action=\"redo\"]')?.addEventListener('click', () => {\n            this.editorRedo();\n        });\n\n        // Rendering buttons\n        document.querySelectorAll('[data-action=\"render-map\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const target = e.target as HTMLElement;\n                const width = parseInt(target.dataset.width || '600');\n                const height = parseInt(target.dataset.height || '450');\n                this.renderEditor(width, height);\n            });\n        });\n\n        // Export buttons\n        document.querySelectorAll('[data-action=\"export-game\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const target = e.target as HTMLElement;\n                const players = parseInt(target.dataset.players || '2');\n                this.exportToGame(players);\n            });\n        });\n\n        // Advanced tool buttons\n        document.querySelector('[data-action=\"fill-all-grass\"]')?.addEventListener('click', () => {\n            this.fillAllGrass();\n        });\n        document.querySelector('[data-action=\"create-test-pattern\"]')?.addEventListener('click', () => {\n            this.createTestPattern();\n        });\n        document.querySelector('[data-action=\"create-island-map\"]')?.addEventListener('click', () => {\n            this.createIslandMap();\n        });\n        document.querySelector('[data-action=\"create-mountain-ridge\"]')?.addEventListener('click', () => {\n            this.createMountainRidge();\n        });\n        document.querySelector('[data-action=\"show-terrain-stats\"]')?.addEventListener('click', () => {\n            this.showTerrainStats();\n        });\n        document.querySelector('[data-action=\"randomize-terrain\"]')?.addEventListener('click', () => {\n            this.randomizeTerrain();\n        });\n        document.querySelector('[data-action=\"download-image\"]')?.addEventListener('click', () => {\n            this.downloadImage();\n        });\n        document.querySelector('[data-action=\"download-game-data\"]')?.addEventListener('click', () => {\n            this.downloadGameData();\n        });\n\n        // Map resize controls\n        document.querySelectorAll('[data-action=\"add-row\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const side = (e.target as HTMLElement).dataset.side || 'bottom';\n                this.addRow(side);\n            });\n        });\n        document.querySelectorAll('[data-action=\"remove-row\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const side = (e.target as HTMLElement).dataset.side || 'bottom';\n                this.removeRow(side);\n            });\n        });\n        document.querySelectorAll('[data-action=\"add-col\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const side = (e.target as HTMLElement).dataset.side || 'right';\n                this.addColumn(side);\n            });\n        });\n        document.querySelectorAll('[data-action=\"remove-col\"]').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const side = (e.target as HTMLElement).dataset.side || 'right';\n                this.removeColumn(side);\n            });\n        });\n\n        // Canvas interactions\n        if (this.mapCanvas) {\n            this.mapCanvas.addEventListener('click', this.handleCanvasClick.bind(this));\n            this.mapCanvas.addEventListener('mousemove', this.handleCanvasMouseMove.bind(this));\n        }\n    }\n\n    private loadInitialState(): void {\n        this.updateThemeButtonState();\n        this.updateEditorStatus('Initializing...');\n\n        if (this.isNewMap) {\n            this.logToConsole('Creating new map...');\n            this.initializeNewMap();\n        } else if (this.currentMapId) {\n            this.logToConsole(`Loading existing map: ${this.currentMapId}`);\n            this.loadExistingMap(this.currentMapId);\n        } else {\n            this.logToConsole('Error: No map ID provided');\n            this.updateEditorStatus('Error');\n        }\n    }\n\n    private async initializeWasm(): Promise<void> {\n        try {\n            this.logToConsole('Loading WASM module...');\n            \n            // Check if WASM functions are available\n            if (typeof (window as any).editorCreate === 'undefined') {\n                this.logToConsole('WASM functions not available - loading WASM module...');\n                await this.loadWasmModule();\n                // Check again after loading\n                if (typeof (window as any).editorCreate === 'undefined') {\n                    throw new Error('WASM module loaded but functions not available');\n                }\n            }\n            \n            // Initialize WASM editor with canvas binding\n            this.logToConsole('Initializing WASM editor...');\n            const editorResult = (window as any).editorCreate('map-canvas', 600, 450);\n            if (!editorResult.success) {\n                throw new Error(editorResult.error);\n            }\n            this.logToConsole(`Editor bound to canvas: ${editorResult.data.canvasID}`);\n            \n            // Create World-Renderer components\n            this.logToConsole('Creating World-Renderer components...');\n            \n            // Create World\n            const worldResult = (window as any).worldCreate(2, null, 12345);\n            if (!worldResult.success) {\n                throw new Error(`World creation failed: ${worldResult.error}`);\n            }\n            this.wasmWorld = worldResult.data;\n            \n            // Create ViewState\n            const viewStateResult = (window as any).viewStateCreate();\n            if (!viewStateResult.success) {\n                throw new Error(`ViewState creation failed: ${viewStateResult.error}`);\n            }\n            this.wasmViewState = viewStateResult.data;\n            \n            // Create CanvasRenderer\n            const rendererResult = (window as any).canvasRendererCreate();\n            if (!rendererResult.success) {\n                throw new Error(`CanvasRenderer creation failed: ${rendererResult.error}`);\n            }\n            this.wasmCanvasRenderer = rendererResult.data;\n            \n            // Load embedded assets for terrain images\n            this.logToConsole('Loading embedded terrain and unit assets...');\n            const assetsResult = (window as any).loadEmbeddedAssets();\n            if (assetsResult.success) {\n                this.logToConsole(`Assets loaded: ${assetsResult.data.tilesLoaded} tiles, ${assetsResult.data.unitsLoaded} units`);\n            } else {\n                this.logToConsole(`Asset loading failed: ${assetsResult.error}`);\n                // Continue anyway - we can still render with fallback colors\n            }\n            \n            // Test asset loading to verify\n            const testResult = (window as any).testEmbeddedAssets();\n            if (testResult.success) {\n                this.logToConsole(`Asset test: ${testResult.data.tilesInCache} tiles, ${testResult.data.unitsInCache} units in cache`);\n                if (testResult.data.tileLoadError) {\n                    this.logToConsole(`Tile load error: ${testResult.data.tileLoadError}`);\n                }\n                if (testResult.data.unitLoadError) {\n                    this.logToConsole(`Unit load error: ${testResult.data.unitLoadError}`);\n                }\n            }\n            \n            this.wasmInitialized = true;\n            this.updateEditorStatus('Ready');\n            this.logToConsole('WASM module loaded and initialized successfully');\n            \n        } catch (error) {\n            console.error('Failed to initialize WASM:', error);\n            this.logToConsole(`WASM initialization failed: ${error}`);\n            this.updateEditorStatus('WASM Error');\n        }\n    }\n\n    private async loadWasmModule(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.logToConsole('Loading editor.wasm...');\n            \n            // Create a new WebAssembly instance\n            const go = new (window as any).Go();\n            \n            WebAssembly.instantiateStreaming(fetch('/static/wasm/editor.wasm'), go.importObject)\n                .then((result) => {\n                    this.logToConsole('WASM module instantiated, starting...');\n                    go.run(result.instance);\n                    \n                    // Wait a bit for the module to register its functions\n                    setTimeout(() => {\n                        this.logToConsole('WASM module should be ready');\n                        resolve();\n                    }, 100);\n                })\n                .catch((error) => {\n                    this.logToConsole(`WASM loading failed: ${error}`);\n                    reject(error);\n                });\n        });\n    }\n\n    private initializeNewMap(): void {\n        this.mapData = {\n            name: \"New Map\",\n            width: 8,\n            height: 8,\n            tiles: {},\n            map_units: []\n        };\n        this.updateEditorStatus('New Map');\n        this.logToConsole('New map initialized');\n    }\n\n    private async loadExistingMap(mapId: string): Promise<void> {\n        try {\n            // TODO: Load map data from API\n            this.logToConsole(`Loading map data for ${mapId}...`);\n            this.updateEditorStatus('Loading...');\n            \n            // Placeholder - will be replaced with actual API call\n            setTimeout(() => {\n                this.mapData = {\n                    name: `Map ${mapId}`,\n                    width: 8,\n                    height: 8,\n                    tiles: {},\n                    map_units: []\n                };\n                this.updateEditorStatus('Loaded');\n                this.logToConsole('Map data loaded');\n            }, 1000);\n            \n        } catch (error) {\n            console.error('Failed to load map:', error);\n            this.logToConsole(`Failed to load map: ${error}`);\n            this.updateEditorStatus('Load Error');\n        }\n    }\n\n    // Editor functions called by the template\n    public createNewMap(width: number, height: number): void {\n        this.logToConsole(`Creating new ${width}×${height} map...`);\n        \n        // Create new map using WASM - it will automatically render to canvas\n        if (this.wasmInitialized) {\n            try {\n                const result = (window as any).editorSetMapSize(height, width); // Note: WASM expects (rows, cols)\n                if (result.success) {\n                    this.logToConsole(`${result.message}`);\n                    \n                    // Update local map data to stay in sync\n                    this.mapData = {\n                        name: `New ${width}×${height} Map`,\n                        width,\n                        height,\n                        tiles: {},\n                        map_units: []\n                    };\n                    \n                    this.updateEditorStatus('Ready');\n                    this.logToConsole('New map created and rendered');\n                } else {\n                    this.logToConsole(`WASM map creation failed: ${result.error}`);\n                }\n            } catch (error) {\n                this.logToConsole(`WASM map creation error: ${error}`);\n            }\n        }\n    }\n\n    public setBrushTerrain(terrain: number): void {\n        this.currentTerrain = terrain;\n        \n        // Update WASM editor brush terrain\n        if (this.wasmInitialized) {\n            try {\n                const result = (window as any).editorSetBrushTerrain(terrain);\n                if (!result.success) {\n                    this.logToConsole(`WASM setBrushTerrain failed: ${result.error}`);\n                }\n            } catch (error) {\n                this.logToConsole(`WASM setBrushTerrain error: ${error}`);\n            }\n        }\n        \n        const terrainNames = ['Unknown', 'Grass', 'Desert', 'Water', 'Mountain', 'Rock'];\n        this.logToConsole(`Brush terrain set to: ${terrainNames[terrain]}`);\n        this.updateBrushInfo();\n        this.updateTerrainButtonSelection(terrain);\n    }\n\n    public setBrushSize(size: number): void {\n        this.brushSize = size;\n        \n        // Update WASM editor brush size\n        if (this.wasmInitialized) {\n            try {\n                const result = (window as any).editorSetBrushSize(size);\n                if (!result.success) {\n                    this.logToConsole(`WASM setBrushSize failed: ${result.error}`);\n                }\n            } catch (error) {\n                this.logToConsole(`WASM setBrushSize error: ${error}`);\n            }\n        }\n        \n        const sizeNames = ['Single (1 hex)', 'Small (7 hexes)', 'Medium (19 hexes)', 'Large (37 hexes)', 'X-Large (61 hexes)', 'XX-Large (91 hexes)'];\n        this.logToConsole(`Brush size set to: ${sizeNames[size]}`);\n        this.updateBrushInfo();\n    }\n\n    public paintTerrain(): void {\n        const rowInput = document.getElementById('paint-row') as HTMLInputElement;\n        const colInput = document.getElementById('paint-col') as HTMLInputElement;\n        \n        if (rowInput && colInput) {\n            const row = parseInt(rowInput.value);\n            const col = parseInt(colInput.value);\n            this.logToConsole(`Painting terrain ${this.currentTerrain} at (${row}, ${col})`);\n            // TODO: Implement actual painting logic with WASM\n        }\n    }\n\n    public floodFill(): void {\n        const rowInput = document.getElementById('paint-row') as HTMLInputElement;\n        const colInput = document.getElementById('paint-col') as HTMLInputElement;\n        \n        if (rowInput && colInput) {\n            const row = parseInt(rowInput.value);\n            const col = parseInt(colInput.value);\n            this.logToConsole(`Flood filling with terrain ${this.currentTerrain} from (${row}, ${col})`);\n            // TODO: Implement flood fill logic with WASM\n        }\n    }\n\n    public removeTerrain(): void {\n        const rowInput = document.getElementById('paint-row') as HTMLInputElement;\n        const colInput = document.getElementById('paint-col') as HTMLInputElement;\n        \n        if (rowInput && colInput) {\n            const row = parseInt(rowInput.value);\n            const col = parseInt(colInput.value);\n            this.logToConsole(`Removing terrain at (${row}, ${col})`);\n            // TODO: Implement terrain removal logic with WASM\n        }\n    }\n\n    public editorUndo(): void {\n        this.logToConsole('Undo action');\n        // TODO: Implement undo functionality\n    }\n\n    public editorRedo(): void {\n        this.logToConsole('Redo action');\n        // TODO: Implement redo functionality\n    }\n\n    public renderEditor(width: number, height: number): void {\n        this.logToConsole(`Rendering map at ${width}×${height}...`);\n        // TODO: Implement WASM rendering\n        \n        // For now, just re-render the canvas\n        this.renderMapCanvas();\n    }\n\n    public downloadImage(): void {\n        this.logToConsole('Downloading map image...');\n        // TODO: Implement image download\n        this.toastManager?.showToast('Download', 'Image download not yet implemented', 'info');\n    }\n\n    public exportToGame(players: number): void {\n        this.logToConsole(`Exporting as ${players}-player game...`);\n        // TODO: Implement game export\n        this.toastManager?.showToast('Export', `${players}-player game export not yet implemented`, 'info');\n    }\n\n    public downloadGameData(): void {\n        this.logToConsole('Downloading game data...');\n        // TODO: Implement game data download\n        this.toastManager?.showToast('Download', 'Game data download not yet implemented', 'info');\n    }\n\n    // Advanced tool functions\n    public fillAllGrass(): void {\n        this.logToConsole('Filling all tiles with grass...');\n        // TODO: Implement with WASM\n    }\n\n    public createTestPattern(): void {\n        this.logToConsole('Creating test pattern...');\n        // TODO: Implement test pattern generation\n    }\n\n    public createIslandMap(): void {\n        this.logToConsole('Creating island map...');\n        // TODO: Implement island generation\n    }\n\n    public createMountainRidge(): void {\n        this.logToConsole('Creating mountain ridge...');\n        // TODO: Implement mountain ridge generation\n    }\n\n    public showTerrainStats(): void {\n        this.logToConsole('Terrain statistics:');\n        this.logToConsole('- Grass: 0 tiles');\n        this.logToConsole('- Desert: 0 tiles');\n        this.logToConsole('- Water: 0 tiles');\n        this.logToConsole('- Mountain: 0 tiles');\n        this.logToConsole('- Rock: 0 tiles');\n        // TODO: Calculate actual stats from map data\n    }\n\n    public randomizeTerrain(): void {\n        this.logToConsole('Randomizing terrain...');\n        // TODO: Implement terrain randomization\n    }\n\n    // Canvas management methods\n    private initializeCanvas(): void {\n        if (!this.mapCanvas) return;\n        \n        // Canvas is now bound to WASM editor and will be rendered automatically\n        this.logToConsole('Canvas initialized');\n    }\n\n    // renderMapCanvas() method removed - WASM now pushes updates directly to canvas\n\n    private handleCanvasClick(event: MouseEvent): void {\n        if (!this.mapCanvas || !this.mapData) return;\n\n        const rect = this.mapCanvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        const coords = this.pixelToHex(x, y);\n        if (coords && coords.row >= 0 && coords.row < this.mapData.height && \n            coords.col >= 0 && coords.col < this.mapData.width) {\n            \n            this.logToConsole(`Clicked hex (${coords.row}, ${coords.col})`);\n            this.paintHexAtCoords(coords.row, coords.col);\n        }\n    }\n\n    private handleCanvasMouseMove(event: MouseEvent): void {\n        if (!this.mapCanvas) return;\n\n        const rect = this.mapCanvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        const coords = this.pixelToHex(x, y);\n        if (coords) {\n            // Update coordinate inputs\n            const rowInput = document.getElementById('paint-row') as HTMLInputElement;\n            const colInput = document.getElementById('paint-col') as HTMLInputElement;\n            \n            if (rowInput) rowInput.value = coords.row.toString();\n            if (colInput) colInput.value = coords.col.toString();\n        }\n    }\n\n    private pixelToHex(x: number, y: number): {row: number, col: number} | null {\n        // Convert pixel coordinates to hex grid coordinates\n        const hexSize = 20;\n        const hexWidth = hexSize * 2;\n        const rowHeight = Math.sqrt(3) * hexSize * 0.75;\n        \n        // Approximate row and column\n        const row = Math.floor((y - hexSize - 20) / rowHeight);\n        const col = Math.floor((x - hexSize - 20 - (row % 2) * hexSize) / hexWidth);\n        \n        return { row, col };\n    }\n\n    private paintHexAtCoords(row: number, col: number): void {\n        if (!this.wasmInitialized) {\n            this.logToConsole('WASM not initialized - cannot paint terrain');\n            return;\n        }\n        \n        try {\n            // Use WASM editor to paint terrain - WASM will push the update directly to canvas\n            const result = (window as any).editorPaintTerrain(row, col);\n            \n            if (result.success) {\n                // Update local map data to stay in sync\n                if (this.mapData) {\n                    const key = `${row},${col}`;\n                    this.mapData.tiles[key] = { tileType: this.currentTerrain };\n                }\n                \n                // No need to call renderMapCanvas() - WASM pushes the update directly\n                \n                const terrainNames = ['Unknown', 'Grass', 'Desert', 'Water', 'Mountain', 'Rock'];\n                this.logToConsole(`Painted ${terrainNames[this.currentTerrain]} at (${row}, ${col})`);\n            } else {\n                this.logToConsole(`Paint failed: ${result.error}`);\n            }\n        } catch (error) {\n            this.logToConsole(`Paint error: ${error}`);\n        }\n    }\n\n    // Map resize methods\n    public addRow(side: string): void {\n        if (!this.mapData || !this.wasmInitialized) return;\n        \n        this.logToConsole(`Adding row to ${side}`);\n        const newHeight = this.mapData.height + 1;\n        \n        try {\n            const result = (window as any).editorSetMapSize(newHeight, this.mapData.width);\n            if (result.success) {\n                this.mapData.height = newHeight;\n                this.logToConsole(`${result.message}`);\n            } else {\n                this.logToConsole(`Failed to add row: ${result.error}`);\n            }\n        } catch (error) {\n            this.logToConsole(`Error adding row: ${error}`);\n        }\n    }\n\n    public removeRow(side: string): void {\n        if (!this.mapData || this.mapData.height <= 1 || !this.wasmInitialized) return;\n        \n        this.logToConsole(`Removing row from ${side}`);\n        const newHeight = this.mapData.height - 1;\n        \n        try {\n            const result = (window as any).editorSetMapSize(newHeight, this.mapData.width);\n            if (result.success) {\n                this.mapData.height = newHeight;\n                this.logToConsole(`${result.message}`);\n            } else {\n                this.logToConsole(`Failed to remove row: ${result.error}`);\n            }\n        } catch (error) {\n            this.logToConsole(`Error removing row: ${error}`);\n        }\n    }\n\n    public addColumn(side: string): void {\n        if (!this.mapData || !this.wasmInitialized) return;\n        \n        this.logToConsole(`Adding column to ${side}`);\n        const newWidth = this.mapData.width + 1;\n        \n        try {\n            const result = (window as any).editorSetMapSize(this.mapData.height, newWidth);\n            if (result.success) {\n                this.mapData.width = newWidth;\n                this.logToConsole(`${result.message}`);\n            } else {\n                this.logToConsole(`Failed to add column: ${result.error}`);\n            }\n        } catch (error) {\n            this.logToConsole(`Error adding column: ${error}`);\n        }\n    }\n\n    public removeColumn(side: string): void {\n        if (!this.mapData || this.mapData.width <= 1 || !this.wasmInitialized) return;\n        \n        this.logToConsole(`Removing column from ${side}`);\n        const newWidth = this.mapData.width - 1;\n        \n        try {\n            const result = (window as any).editorSetMapSize(this.mapData.height, newWidth);\n            if (result.success) {\n                this.mapData.width = newWidth;\n                this.logToConsole(`${result.message}`);\n            } else {\n                this.logToConsole(`Failed to remove column: ${result.error}`);\n            }\n        } catch (error) {\n            this.logToConsole(`Error removing column: ${error}`);\n        }\n    }\n\n    private async saveMap(): Promise<void> {\n        if (!this.mapData) {\n            this.toastManager?.showToast('Error', 'No map data to save', 'error');\n            return;\n        }\n\n        try {\n            this.logToConsole('Saving map...');\n            this.updateEditorStatus('Saving...');\n\n            const url = this.isNewMap ? '/api/maps' : `/api/maps/${this.currentMapId}`;\n            const method = this.isNewMap ? 'POST' : 'PUT';\n\n            const response = await fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(this.mapData),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                this.logToConsole('Map saved successfully');\n                this.updateEditorStatus('Saved');\n                this.toastManager?.showToast('Success', 'Map saved successfully', 'success');\n                \n                // If this was a new map, update the current map ID\n                if (this.isNewMap && result.id) {\n                    this.currentMapId = result.id;\n                    this.isNewMap = false;\n                    // Update URL without reload\n                    history.replaceState(null, '', `/maps/${result.id}/edit`);\n                }\n            } else {\n                throw new Error(`Save failed: ${response.statusText}`);\n            }\n        } catch (error) {\n            console.error('Save failed:', error);\n            this.logToConsole(`Save failed: ${error}`);\n            this.updateEditorStatus('Save Error');\n            this.toastManager?.showToast('Error', 'Failed to save map', 'error');\n        }\n    }\n\n    private exportMap(): void {\n        this.logToConsole('Exporting map...');\n        // TODO: Implement map export functionality\n        this.toastManager?.showToast('Export', 'Export functionality not yet implemented', 'info');\n    }\n\n    private validateMap(): void {\n        this.logToConsole('Validating map...');\n        // TODO: Implement map validation\n        this.logToConsole('Map validation completed - no issues found');\n    }\n\n    private clearConsole(): void {\n        if (this.editorOutput) {\n            this.editorOutput.innerHTML = '';\n        }\n    }\n\n    // Utility methods\n    private logToConsole(message: string): void {\n        if (this.editorOutput) {\n            const timestamp = new Date().toLocaleTimeString();\n            const logEntry = `[${timestamp}] ${message}`;\n            \n            // Use innerHTML to properly handle line breaks\n            const currentContent = this.editorOutput.innerHTML;\n            this.editorOutput.innerHTML = currentContent + (currentContent ? '<br>' : '') + this.escapeHtml(logEntry);\n            this.editorOutput.scrollTop = this.editorOutput.scrollHeight;\n        }\n        console.log(`[MapEditor] ${message}`);\n    }\n\n    private escapeHtml(text: string): string {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    private updateEditorStatus(status: string): void {\n        const statusElement = document.getElementById('editor-status');\n        if (statusElement) {\n            statusElement.textContent = status;\n            \n            // Update status color based on state\n            statusElement.className = 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium';\n            if (status.includes('Error')) {\n                statusElement.className += ' bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n            } else if (status === 'Ready' || status === 'Saved' || status === 'Loaded') {\n                statusElement.className += ' bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n            } else {\n                statusElement.className += ' bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n            }\n        }\n    }\n\n    private updateBrushInfo(): void {\n        const brushInfo = document.getElementById('brush-info');\n        if (brushInfo) {\n            const terrainNames = ['Unknown', 'Grass', 'Desert', 'Water', 'Mountain', 'Rock'];\n            const sizeNames = ['Single (1 hex)', 'Small (7 hexes)', 'Medium (19 hexes)', 'Large (37 hexes)', 'X-Large (61 hexes)', 'XX-Large (91 hexes)'];\n            brushInfo.textContent = `Current: ${terrainNames[this.currentTerrain]}, ${sizeNames[this.brushSize]}`;\n        }\n    }\n\n    private updateTerrainButtonSelection(terrain: number): void {\n        document.querySelectorAll('.terrain-button').forEach(button => {\n            const buttonTerrain = button.getAttribute('data-terrain');\n            if (buttonTerrain === terrain.toString()) {\n                button.classList.add('bg-blue-100', 'dark:bg-blue-900', 'border-blue-500');\n            } else {\n                button.classList.remove('bg-blue-100', 'dark:bg-blue-900', 'border-blue-500');\n            }\n        });\n    }\n\n    // Theme management\n    private handleThemeToggleClick(): void {\n        const currentSetting = ThemeManager.getCurrentThemeSetting();\n        const nextSetting = ThemeManager.getNextTheme(currentSetting);\n        ThemeManager.setTheme(nextSetting);\n        this.updateThemeButtonState(nextSetting);\n    }\n\n    private updateThemeButtonState(currentTheme?: string): void {\n        if (!this.themeToggleButton || !this.themeToggleIcon) return;\n\n        const themeToDisplay = currentTheme || ThemeManager.getCurrentThemeSetting();\n        const iconSVG = ThemeManager.getIconSVG(themeToDisplay);\n        const label = `Toggle theme (currently: ${ThemeManager.getThemeLabel(themeToDisplay)})`;\n\n        this.themeToggleIcon.innerHTML = iconSVG;\n        this.themeToggleButton.setAttribute('aria-label', label);\n        this.themeToggleButton.setAttribute('title', label);\n    }\n}\n\n// Initialize the editor when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    new MapEditorPage();\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"MapEditorPage\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = this[\"webpackChunkweewar\"] = this[\"webpackChunkweewar\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"frontend_components_Modal_ts-frontend_components_ThemeManager_ts-frontend_components_ToastMan-fef01a\"], () => (__webpack_require__(\"./frontend/components/MapEditorPage.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}