syntax = "proto3";

package weewar.v1;

import "google/protobuf/field_mask.proto";
import "weewar/v1/models.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/panyam/turnengine/games/weewar/gen/go/weewar/v1";

// UsersService manages the user examples catalog
service UsersService {
  /**
   * Create a new user
   */
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users",
      body: "*",
    };
  }

  /**
   * Batch get multiple users by ID
   */
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) { 
    option (google.api.http) = {
      get: "/v1/users:batchGet"
    };
  }

  // ListUsers returns all available users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  // GetUser returns a specific user with metadata
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  /**
   * Delete a particular user
   */
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) { 
    option (google.api.http) = {
      delete: "/v1/users/{id=*}"
    };
  }


  // GetUser returns a specific user with metadata
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/users/{user.id=*}"
      body: "*"
    };
  }
}

// UserInfo represents a user in the catalog
message UserInfo {
  string id = 1;
  string name = 2;
  string description = 3;
  string category = 4;
  string difficulty = 5;
  repeated string tags = 6;
  string icon = 7;
  string last_updated = 8;
}

// Request messages
message ListUsersRequest {
  // Pagination info
  Pagination pagination = 1;

  // May be filter by owner id
  string owner_id = 2;
}

message ListUsersResponse {
  repeated User items = 1;

  PaginationResponse pagination = 2;
}

message GetUserRequest {
  string id = 1;
  string version = 2; // Optional, defaults to default_version
}

message GetUserResponse {
  User user = 1;
}

message GetUserContentRequest {
  string id = 1;
  string version = 2; // Optional, defaults to default_version
}

message GetUserContentResponse {
  string weewar_content = 1;
  string recipe_content = 2;
  string readme_content = 3;
}

message UpdateUserRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "UpdateUserRequest"
    }
  };

  /**
   * User being updated
   */
  User user = 1;

  /**
   * Mask of fields being updated in this User to make partial changes.
   */
  google.protobuf.FieldMask update_mask = 2;
}

/**
 * The request for (partially) updating an User.
 */
message UpdateUserResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "UpdateUserResponse"
    }
  };

  /**
   * User being updated
   */
  User user = 1;
}

/**
 * Request to delete an user.
 */
message DeleteUserRequest {
  /**
   * ID of the user to be deleted.
   */
  string id = 1;
}

/**
 * User deletion response
 */
message DeleteUserResponse {
}

/**
 * Request to batch get users
 */
message GetUsersRequest {
  /**
   * IDs of the user to be fetched
   */
  repeated string ids = 1;
}

/**
 * User batch-get response
 */
message GetUsersResponse {
  map<string, User> users = 1;
}

/**
 * User creation request object
 */
message CreateUserRequest {
  /**
   * User being updated
   */
  User user = 1;
}

/**
 * Response of an user creation.
 */
message CreateUserResponse {
  /**
   * User being created
   */
  User user = 1;

  /**
   * Error specific to a field if there are any errors.
   */
  map<string, string> field_errors = 2;
}
